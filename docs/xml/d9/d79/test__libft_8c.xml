<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d9/d79/test__libft_8c" kind="file" language="C++">
    <compoundname>test_libft.c</compoundname>
    <includes local="yes">../Libft/libft.h</includes>
    <includes local="yes">unity/unity.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/time.h</includes>
    <incdepgraph>
      <node id="2">
        <label>../Libft/libft.h</label>
      </node>
      <node id="1">
        <label>test_libft.c</label>
        <link refid="d9/d79/test__libft_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>fcntl.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/time.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
      <node id="3">
        <label>unity/unity.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a95c834d6178047ce9e1bce7cbfea2836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setUp</definition>
        <argsstring>(void)</argsstring>
        <name>setUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="12" column="6" bodyfile="test_libft.c" bodystart="12" bodyend="12"/>
        <referencedby refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="d5/ddd/unity_8c" startline="1827" endline="1845">UnityDefaultTestRun</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a9909011e5fea0c018842eec4d93d0662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tearDown</definition>
        <argsstring>(void)</argsstring>
        <name>tearDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="13" column="6" bodyfile="test_libft.c" bodystart="13" bodyend="13"/>
        <referencedby refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="d5/ddd/unity_8c" startline="1827" endline="1845">UnityDefaultTestRun</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a4f50257fb9a3739de4258e024a974756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_memory_leaks</definition>
        <argsstring>(void)</argsstring>
        <name>check_memory_leaks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="16" column="6" bodyfile="test_libft.c" bodystart="16" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double measure_time</definition>
        <argsstring>(void(*test_func)(void))</argsstring>
        <name>measure_time</name>
        <param>
          <type>void(*)(void)</type>
          <declname>test_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="67" column="8" bodyfile="test_libft.c" bodystart="67" bodyend="73"/>
        <references refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" compoundref="d9/d79/test__libft_8c" startline="468" endline="470">test_func</references>
        <referencedby refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" compoundref="d9/d79/test__libft_8c" startline="571" endline="574">run_performance_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a90f882a65b95a6ba7a366a70ed503b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_temp_file</definition>
        <argsstring>(const char *content)</argsstring>
        <name>create_temp_file</name>
        <param>
          <type>const char *</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="76" column="5" bodyfile="test_libft.c" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a93076e89428b1a1692e85f51453ae2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void report_error</definition>
        <argsstring>(const char *test_name, const char *expected, const char *actual)</argsstring>
        <name>report_error</name>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="86" column="6" bodyfile="test_libft.c" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aefd5a0ec59a0f0de0b5289a9cd9b2d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_isalpha</definition>
        <argsstring>(void)</argsstring>
        <name>test_isalpha</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="93" column="6" bodyfile="test_libft.c" bodystart="93" bodyend="101"/>
        <references refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e">ft_isalpha</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a9c0d208f96bdf47a5cb57c729a8a7f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_isdigit</definition>
        <argsstring>(void)</argsstring>
        <name>test_isdigit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="103" column="6" bodyfile="test_libft.c" bodystart="103" bodyend="111"/>
        <references refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d">ft_isdigit</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a3ffdb51d3bf93f9197e5fe888f7b5a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_isalnum</definition>
        <argsstring>(void)</argsstring>
        <name>test_isalnum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="113" column="6" bodyfile="test_libft.c" bodystart="113" bodyend="121"/>
        <references refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b">ft_isalnum</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a5ebb97434628b20cf0bb04c3988d40ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_isascii</definition>
        <argsstring>(void)</argsstring>
        <name>test_isascii</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="123" column="6" bodyfile="test_libft.c" bodystart="123" bodyend="128"/>
        <references refid="db/d79/libft__docs_8h_1abf60ddbec6479540e81f3648cf71f1f4">ft_isascii</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1af3d3dc6671a75074dc7b63cbca4f75e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_isprint</definition>
        <argsstring>(void)</argsstring>
        <name>test_isprint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="130" column="6" bodyfile="test_libft.c" bodystart="130" bodyend="136"/>
        <references refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca">ft_isprint</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strlen</definition>
        <argsstring>(void)</argsstring>
        <name>test_strlen</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="139" column="6" bodyfile="test_libft.c" bodystart="139" bodyend="145"/>
        <references refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a">ft_strlen</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ae1b87c5afaaea495ddaf760e45cfcc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_memset</definition>
        <argsstring>(void)</argsstring>
        <name>test_memset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="147" column="6" bodyfile="test_libft.c" bodystart="147" bodyend="157"/>
        <references refid="db/d79/libft__docs_8h_1a19d0a16cec67fe4c1af22f1571f4f8a6">ft_memset</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1abfe29719124f5a41e57bad7a7c005282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bzero</definition>
        <argsstring>(void)</argsstring>
        <name>test_bzero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="159" column="6" bodyfile="test_libft.c" bodystart="159" bodyend="169"/>
        <references refid="db/d79/libft__docs_8h_1a5937ab0d08e31d0e3e4a16ec71e293a1">ft_bzero</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1afd336e56c8e975e54a1e5811dc95309f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_memcpy</definition>
        <argsstring>(void)</argsstring>
        <name>test_memcpy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="171" column="6" bodyfile="test_libft.c" bodystart="171" bodyend="182"/>
        <references refid="db/d79/libft__docs_8h_1a5f5c5d19b1f0355d9768c75d30ed5559">ft_memcpy</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1adbdeaedccd2367f1d025fcc3b670dc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_memmove</definition>
        <argsstring>(void)</argsstring>
        <name>test_memmove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="184" column="6" bodyfile="test_libft.c" bodystart="184" bodyend="194"/>
        <references refid="db/d79/libft__docs_8h_1acdc865fa140c03c01a39d74b1f5c2416">ft_memmove</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a2faeccbd4694bfcb07b91f4f3d058fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strlcpy</definition>
        <argsstring>(void)</argsstring>
        <name>test_strlcpy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="196" column="6" bodyfile="test_libft.c" bodystart="196" bodyend="205"/>
        <references refid="db/d79/libft__docs_8h_1a12f759eb9793cf306fede66d0b7de0fc">ft_strlcpy</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ae56b2032f4a17d9dbb566ee3adfe7793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strlcat</definition>
        <argsstring>(void)</argsstring>
        <name>test_strlcat</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="207" column="6" bodyfile="test_libft.c" bodystart="207" bodyend="216"/>
        <references refid="db/d79/libft__docs_8h_1a7531453313e0cbfde6fe51662c9c3208">ft_strlcat</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1af7800dba64b8f4ab83a77f20152f6804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_toupper</definition>
        <argsstring>(void)</argsstring>
        <name>test_toupper</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="218" column="6" bodyfile="test_libft.c" bodystart="218" bodyend="224"/>
        <references refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12">ft_toupper</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a31215f0af2569da6b3ee78584fd818d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_tolower</definition>
        <argsstring>(void)</argsstring>
        <name>test_tolower</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="226" column="6" bodyfile="test_libft.c" bodystart="226" bodyend="232"/>
        <references refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17">ft_tolower</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strchr</definition>
        <argsstring>(void)</argsstring>
        <name>test_strchr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="234" column="6" bodyfile="test_libft.c" bodystart="234" bodyend="240"/>
        <references refid="db/d79/libft__docs_8h_1aa6d0c2d180f32ee585485e1a1ce3d55d">ft_strchr</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strrchr</definition>
        <argsstring>(void)</argsstring>
        <name>test_strrchr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="242" column="6" bodyfile="test_libft.c" bodystart="242" bodyend="248"/>
        <references refid="db/d79/libft__docs_8h_1a49c260cf80f9997975d6f3ec74ead582">ft_strrchr</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strncmp</definition>
        <argsstring>(void)</argsstring>
        <name>test_strncmp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="250" column="6" bodyfile="test_libft.c" bodystart="250" bodyend="256"/>
        <references refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc">ft_strncmp</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a7d942f0bb7c4ef42734ee0ded29a3e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_memchr</definition>
        <argsstring>(void)</argsstring>
        <name>test_memchr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="258" column="6" bodyfile="test_libft.c" bodystart="258" bodyend="264"/>
        <references refid="db/d79/libft__docs_8h_1abf633e8e48a8afbe61947f61de5ac695">ft_memchr</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a45684548fb2dd1bf7cbbb4188541e82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_memcmp</definition>
        <argsstring>(void)</argsstring>
        <name>test_memcmp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="266" column="6" bodyfile="test_libft.c" bodystart="266" bodyend="272"/>
        <references refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc">ft_memcmp</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strnstr</definition>
        <argsstring>(void)</argsstring>
        <name>test_strnstr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="274" column="6" bodyfile="test_libft.c" bodystart="274" bodyend="280"/>
        <references refid="db/d79/libft__docs_8h_1ae00229613cc0bf361e86dca72ad92591">ft_strnstr</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a7046e5fb801359527dfbcb5b09b3b92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_atoi</definition>
        <argsstring>(void)</argsstring>
        <name>test_atoi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="282" column="6" bodyfile="test_libft.c" bodystart="282" bodyend="291"/>
        <references refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16">ft_atoi</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a764c620aaa65aaef8a3d74d58e93c89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_calloc</definition>
        <argsstring>(void)</argsstring>
        <name>test_calloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="293" column="6" bodyfile="test_libft.c" bodystart="293" bodyend="313"/>
        <references refid="db/d79/libft__docs_8h_1ae0a6807f9f78ed4bf4f958323582d22f">ft_calloc</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strdup</definition>
        <argsstring>(void)</argsstring>
        <name>test_strdup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="315" column="6" bodyfile="test_libft.c" bodystart="315" bodyend="330"/>
        <references refid="db/d79/libft__docs_8h_1a2ac2079a4250507c9af75d696f2ae476">ft_strdup</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_substr</definition>
        <argsstring>(void)</argsstring>
        <name>test_substr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="332" column="6" bodyfile="test_libft.c" bodystart="332" bodyend="350"/>
        <references refid="db/d79/libft__docs_8h_1a78c402cbf3d55b1374693c3b7d34f71d">ft_substr</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strjoin</definition>
        <argsstring>(void)</argsstring>
        <name>test_strjoin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="352" column="6" bodyfile="test_libft.c" bodystart="352" bodyend="367"/>
        <references refid="db/d79/libft__docs_8h_1a91e6e3e428bcc9f2291b700e1829b82b">ft_strjoin</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strtrim</definition>
        <argsstring>(void)</argsstring>
        <name>test_strtrim</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="369" column="6" bodyfile="test_libft.c" bodystart="369" bodyend="384"/>
        <references refid="db/d79/libft__docs_8h_1a60352c5b39fab08469b3e28131a79e25">ft_strtrim</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_split</definition>
        <argsstring>(void)</argsstring>
        <name>test_split</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="386" column="6" bodyfile="test_libft.c" bodystart="386" bodyend="426"/>
        <references refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4">ft_split</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1abb295917a3eb14e4e20419e367522431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_itoa</definition>
        <argsstring>(void)</argsstring>
        <name>test_itoa</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="428" column="6" bodyfile="test_libft.c" bodystart="428" bodyend="448"/>
        <references refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38">ft_itoa</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char test_map</definition>
        <argsstring>(unsigned int i, char c)</argsstring>
        <name>test_map</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="450" column="6" bodyfile="test_libft.c" bodystart="450" bodyend="453"/>
        <referencedby refid="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" compoundref="d9/d79/test__libft_8c" startline="455" endline="465">test_strmapi</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_strmapi</definition>
        <argsstring>(void)</argsstring>
        <name>test_strmapi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="455" column="6" bodyfile="test_libft.c" bodystart="455" bodyend="465"/>
        <references refid="db/d79/libft__docs_8h_1a668b60557bfc9d60c2d3ccda8afadf49">ft_strmapi</references>
        <references refid="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" compoundref="d9/d79/test__libft_8c" startline="450" endline="453">test_map</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_func</definition>
        <argsstring>(unsigned int i, char *c)</argsstring>
        <name>test_func</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="468" column="13" bodyfile="test_libft.c" bodystart="468" bodyend="470"/>
        <referencedby refid="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" compoundref="d9/d79/test__libft_8c" startline="67" endline="73">measure_time</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" compoundref="d9/d79/test__libft_8c" startline="571" endline="574">run_performance_test</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" compoundref="d9/d79/test__libft_8c" startline="472" endline="476">test_striteri</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_striteri</definition>
        <argsstring>(void)</argsstring>
        <name>test_striteri</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="472" column="6" bodyfile="test_libft.c" bodystart="472" bodyend="476"/>
        <references refid="db/d79/libft__docs_8h_1ada722cffd2c6c8169ae339afd0f9763c">ft_striteri</references>
        <references refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" compoundref="d9/d79/test__libft_8c" startline="468" endline="470">test_func</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a59656c038fcaeafc75f3f17293bd4353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_putchar_fd</definition>
        <argsstring>(void)</argsstring>
        <name>test_putchar_fd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="478" column="6" bodyfile="test_libft.c" bodystart="478" bodyend="493"/>
        <references refid="db/d79/libft__docs_8h_1a8ee15a511946c1397bd2bdea4aed6aee">ft_putchar_fd</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aa83e8b318d56689656bd962ece77310e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_putstr_fd</definition>
        <argsstring>(void)</argsstring>
        <name>test_putstr_fd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="495" column="6" bodyfile="test_libft.c" bodystart="495" bodyend="510"/>
        <references refid="db/d79/libft__docs_8h_1acefce9ac519f8f8b7d3fde33dbafe469">ft_putstr_fd</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a709c447b36199b558f6e1c75a10f69cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_putendl_fd</definition>
        <argsstring>(void)</argsstring>
        <name>test_putendl_fd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="512" column="6" bodyfile="test_libft.c" bodystart="512" bodyend="527"/>
        <references refid="db/d79/libft__docs_8h_1aeb112152acfc553d58d61a5df38afcde">ft_putendl_fd</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a705bb4e217c9c6cae26a0b532c1c9dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_putnbr_fd</definition>
        <argsstring>(void)</argsstring>
        <name>test_putnbr_fd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="529" column="6" bodyfile="test_libft.c" bodystart="529" bodyend="544"/>
        <references refid="db/d79/libft__docs_8h_1a63cc0aec12256d125d3f85e472280972">ft_putnbr_fd</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_section_header</definition>
        <argsstring>(const char *title)</argsstring>
        <name>print_section_header</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="547" column="6" bodyfile="test_libft.c" bodystart="547" bodyend="549"/>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_test_stage</definition>
        <argsstring>(const char *stage)</argsstring>
        <name>print_test_stage</name>
        <param>
          <type>const char *</type>
          <declname>stage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="552" column="6" bodyfile="test_libft.c" bodystart="552" bodyend="554"/>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ada2de3e04244dd364751d67e6cecfe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_test_result</definition>
        <argsstring>(const char *test_name, int passed)</argsstring>
        <name>print_test_result</name>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>passed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="557" column="6" bodyfile="test_libft.c" bodystart="557" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a99ef34d7b4a3656995a54afa84f64eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_performance_result</definition>
        <argsstring>(const char *test_name, double time_taken)</argsstring>
        <name>print_performance_result</name>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time_taken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="566" column="6" bodyfile="test_libft.c" bodystart="566" bodyend="568"/>
        <referencedby refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" compoundref="d9/d79/test__libft_8c" startline="571" endline="574">run_performance_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_performance_test</definition>
        <argsstring>(const char *test_name, void(*test_func)(void))</argsstring>
        <name>run_performance_test</name>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>test_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="571" column="6" bodyfile="test_libft.c" bodystart="571" bodyend="574"/>
        <references refid="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" compoundref="d9/d79/test__libft_8c" startline="67" endline="73">measure_time</references>
        <references refid="d9/d79/test__libft_8c_1a99ef34d7b4a3656995a54afa84f64eb0" compoundref="d9/d79/test__libft_8c" startline="566" endline="568">print_performance_result</references>
        <references refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" compoundref="d9/d79/test__libft_8c" startline="468" endline="470">test_func</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1afc36acc09a6f5e42bd176a6264d3b563" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modify_content</definition>
        <argsstring>(void *content)</argsstring>
        <name>modify_content</name>
        <param>
          <type>void *</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="577" column="13" bodyfile="test_libft.c" bodystart="577" bodyend="580"/>
        <referencedby refid="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" compoundref="d9/d79/test__libft_8c" startline="819" endline="850">test_lstiter</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * map_content</definition>
        <argsstring>(void *content)</argsstring>
        <name>map_content</name>
        <param>
          <type>void *</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="582" column="13" bodyfile="test_libft.c" bodystart="582" bodyend="587"/>
        <referencedby refid="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" compoundref="d9/d79/test__libft_8c" startline="852" endline="895">test_lstmap</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dummy_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>dummy_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="590" column="13" bodyfile="test_libft.c" bodystart="590" bodyend="590"/>
        <referencedby refid="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" compoundref="d9/d79/test__libft_8c" startline="719" endline="759">test_lstadd_back</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" compoundref="d9/d79/test__libft_8c" startline="621" endline="661">test_lstadd_front</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" compoundref="d9/d79/test__libft_8c" startline="761" endline="781">test_lstdelone</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1aaa6fe355b7e741f8492178d77470da65" compoundref="d9/d79/test__libft_8c" startline="897" endline="932">test_lstdelone_direct</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" compoundref="d9/d79/test__libft_8c" startline="691" endline="717">test_lstlast</referencedby>
        <referencedby refid="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" compoundref="d9/d79/test__libft_8c" startline="663" endline="689">test_lstsize</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a5d0832d96a4d284dfff3806d3c3c32c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstnew</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstnew</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="593" column="6" bodyfile="test_libft.c" bodystart="593" bodyend="619"/>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstadd_front</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstadd_front</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="621" column="6" bodyfile="test_libft.c" bodystart="621" bodyend="661"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771">ft_lstadd_front</references>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstsize</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstsize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="663" column="6" bodyfile="test_libft.c" bodystart="663" bodyend="689"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <references refid="db/d79/libft__docs_8h_1a9da614988ac99446db9df99d2c773fc1">ft_lstsize</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstlast</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstlast</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="691" column="6" bodyfile="test_libft.c" bodystart="691" bodyend="717"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1aed5f9b5ecc45235a7b7cf9d4b24e43dc">ft_lstlast</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstadd_back</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstadd_back</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="719" column="6" bodyfile="test_libft.c" bodystart="719" bodyend="759"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4">ft_lstadd_back</references>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstdelone</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstdelone</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="761" column="6" bodyfile="test_libft.c" bodystart="761" bodyend="781"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c">ft_lstdelone</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aadf5b3dd0490b6167b824d3065037336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstclear</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstclear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="783" column="6" bodyfile="test_libft.c" bodystart="783" bodyend="817"/>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstiter</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstiter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="819" column="6" bodyfile="test_libft.c" bodystart="819" bodyend="850"/>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d">ft_lstiter</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <references refid="d9/d79/test__libft_8c_1afc36acc09a6f5e42bd176a6264d3b563" compoundref="d9/d79/test__libft_8c" startline="577" endline="580">modify_content</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstmap</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstmap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="852" column="6" bodyfile="test_libft.c" bodystart="852" bodyend="895"/>
        <references refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93">ft_lstclear</references>
        <references refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6">ft_lstmap</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
        <references refid="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" compoundref="d9/d79/test__libft_8c" startline="582" endline="587">map_content</references>
        <referencedby refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="d9/d79/test__libft_8c" startline="935" endline="1025">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1aaa6fe355b7e741f8492178d77470da65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lstdelone_direct</definition>
        <argsstring>(void)</argsstring>
        <name>test_lstdelone_direct</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="897" column="6" bodyfile="test_libft.c" bodystart="897" bodyend="932"/>
        <references refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" compoundref="d9/d79/test__libft_8c" startline="590" endline="590">dummy_free</references>
        <references refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c">ft_lstdelone</references>
        <references refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed">ft_lstnew</references>
      </memberdef>
      <memberdef kind="function" id="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_libft.c" line="935" column="5" bodyfile="test_libft.c" bodystart="935" bodyend="1025"/>
        <references refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" compoundref="d9/d79/test__libft_8c" startline="547" endline="549">print_section_header</references>
        <references refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" compoundref="d9/d79/test__libft_8c" startline="552" endline="554">print_test_stage</references>
        <references refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" compoundref="d9/d79/test__libft_8c" startline="571" endline="574">run_performance_test</references>
        <references refid="d9/d79/test__libft_8c_1a7046e5fb801359527dfbcb5b09b3b92a" compoundref="d9/d79/test__libft_8c" startline="282" endline="291">test_atoi</references>
        <references refid="d9/d79/test__libft_8c_1abfe29719124f5a41e57bad7a7c005282" compoundref="d9/d79/test__libft_8c" startline="159" endline="169">test_bzero</references>
        <references refid="d9/d79/test__libft_8c_1a764c620aaa65aaef8a3d74d58e93c89a" compoundref="d9/d79/test__libft_8c" startline="293" endline="313">test_calloc</references>
        <references refid="d9/d79/test__libft_8c_1a3ffdb51d3bf93f9197e5fe888f7b5a7d" compoundref="d9/d79/test__libft_8c" startline="113" endline="121">test_isalnum</references>
        <references refid="d9/d79/test__libft_8c_1aefd5a0ec59a0f0de0b5289a9cd9b2d41" compoundref="d9/d79/test__libft_8c" startline="93" endline="101">test_isalpha</references>
        <references refid="d9/d79/test__libft_8c_1a5ebb97434628b20cf0bb04c3988d40ea" compoundref="d9/d79/test__libft_8c" startline="123" endline="128">test_isascii</references>
        <references refid="d9/d79/test__libft_8c_1a9c0d208f96bdf47a5cb57c729a8a7f09" compoundref="d9/d79/test__libft_8c" startline="103" endline="111">test_isdigit</references>
        <references refid="d9/d79/test__libft_8c_1af3d3dc6671a75074dc7b63cbca4f75e0" compoundref="d9/d79/test__libft_8c" startline="130" endline="136">test_isprint</references>
        <references refid="d9/d79/test__libft_8c_1abb295917a3eb14e4e20419e367522431" compoundref="d9/d79/test__libft_8c" startline="428" endline="448">test_itoa</references>
        <references refid="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" compoundref="d9/d79/test__libft_8c" startline="719" endline="759">test_lstadd_back</references>
        <references refid="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" compoundref="d9/d79/test__libft_8c" startline="621" endline="661">test_lstadd_front</references>
        <references refid="d9/d79/test__libft_8c_1aadf5b3dd0490b6167b824d3065037336" compoundref="d9/d79/test__libft_8c" startline="783" endline="817">test_lstclear</references>
        <references refid="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" compoundref="d9/d79/test__libft_8c" startline="761" endline="781">test_lstdelone</references>
        <references refid="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" compoundref="d9/d79/test__libft_8c" startline="819" endline="850">test_lstiter</references>
        <references refid="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" compoundref="d9/d79/test__libft_8c" startline="691" endline="717">test_lstlast</references>
        <references refid="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" compoundref="d9/d79/test__libft_8c" startline="852" endline="895">test_lstmap</references>
        <references refid="d9/d79/test__libft_8c_1a5d0832d96a4d284dfff3806d3c3c32c0" compoundref="d9/d79/test__libft_8c" startline="593" endline="619">test_lstnew</references>
        <references refid="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" compoundref="d9/d79/test__libft_8c" startline="663" endline="689">test_lstsize</references>
        <references refid="d9/d79/test__libft_8c_1a7d942f0bb7c4ef42734ee0ded29a3e99" compoundref="d9/d79/test__libft_8c" startline="258" endline="264">test_memchr</references>
        <references refid="d9/d79/test__libft_8c_1a45684548fb2dd1bf7cbbb4188541e82e" compoundref="d9/d79/test__libft_8c" startline="266" endline="272">test_memcmp</references>
        <references refid="d9/d79/test__libft_8c_1afd336e56c8e975e54a1e5811dc95309f" compoundref="d9/d79/test__libft_8c" startline="171" endline="182">test_memcpy</references>
        <references refid="d9/d79/test__libft_8c_1adbdeaedccd2367f1d025fcc3b670dc10" compoundref="d9/d79/test__libft_8c" startline="184" endline="194">test_memmove</references>
        <references refid="d9/d79/test__libft_8c_1ae1b87c5afaaea495ddaf760e45cfcc31" compoundref="d9/d79/test__libft_8c" startline="147" endline="157">test_memset</references>
        <references refid="d9/d79/test__libft_8c_1a59656c038fcaeafc75f3f17293bd4353" compoundref="d9/d79/test__libft_8c" startline="478" endline="493">test_putchar_fd</references>
        <references refid="d9/d79/test__libft_8c_1a709c447b36199b558f6e1c75a10f69cf" compoundref="d9/d79/test__libft_8c" startline="512" endline="527">test_putendl_fd</references>
        <references refid="d9/d79/test__libft_8c_1a705bb4e217c9c6cae26a0b532c1c9dd6" compoundref="d9/d79/test__libft_8c" startline="529" endline="544">test_putnbr_fd</references>
        <references refid="d9/d79/test__libft_8c_1aa83e8b318d56689656bd962ece77310e" compoundref="d9/d79/test__libft_8c" startline="495" endline="510">test_putstr_fd</references>
        <references refid="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" compoundref="d9/d79/test__libft_8c" startline="386" endline="426">test_split</references>
        <references refid="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" compoundref="d9/d79/test__libft_8c" startline="234" endline="240">test_strchr</references>
        <references refid="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" compoundref="d9/d79/test__libft_8c" startline="315" endline="330">test_strdup</references>
        <references refid="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" compoundref="d9/d79/test__libft_8c" startline="472" endline="476">test_striteri</references>
        <references refid="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" compoundref="d9/d79/test__libft_8c" startline="352" endline="367">test_strjoin</references>
        <references refid="d9/d79/test__libft_8c_1ae56b2032f4a17d9dbb566ee3adfe7793" compoundref="d9/d79/test__libft_8c" startline="207" endline="216">test_strlcat</references>
        <references refid="d9/d79/test__libft_8c_1a2faeccbd4694bfcb07b91f4f3d058fc5" compoundref="d9/d79/test__libft_8c" startline="196" endline="205">test_strlcpy</references>
        <references refid="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" compoundref="d9/d79/test__libft_8c" startline="139" endline="145">test_strlen</references>
        <references refid="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" compoundref="d9/d79/test__libft_8c" startline="455" endline="465">test_strmapi</references>
        <references refid="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" compoundref="d9/d79/test__libft_8c" startline="250" endline="256">test_strncmp</references>
        <references refid="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" compoundref="d9/d79/test__libft_8c" startline="274" endline="280">test_strnstr</references>
        <references refid="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" compoundref="d9/d79/test__libft_8c" startline="242" endline="248">test_strrchr</references>
        <references refid="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" compoundref="d9/d79/test__libft_8c" startline="369" endline="384">test_strtrim</references>
        <references refid="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" compoundref="d9/d79/test__libft_8c" startline="332" endline="350">test_substr</references>
        <references refid="d9/d79/test__libft_8c_1a31215f0af2569da6b3ee78584fd818d9" compoundref="d9/d79/test__libft_8c" startline="226" endline="232">test_tolower</references>
        <references refid="d9/d79/test__libft_8c_1af7800dba64b8f4ab83a77f20152f6804" compoundref="d9/d79/test__libft_8c" startline="218" endline="224">test_toupper</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../Libft/libft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;unity/unity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unity<sp/>requires<sp/>these<sp/>even<sp/>if<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="d9/d79/test__libft_8c_1a95c834d6178047ce9e1bce7cbfea2836" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a95c834d6178047ce9e1bce7cbfea2836" kindref="member">setUp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="13" refid="d9/d79/test__libft_8c_1a9909011e5fea0c018842eec4d93d0662" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a9909011e5fea0c018842eec4d93d0662" kindref="member">tearDown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>check<sp/>for<sp/>memory<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d9/d79/test__libft_8c_1a4f50257fb9a3739de4258e024a974756" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a4f50257fb9a3739de4258e024a974756" kindref="member">check_memory_leaks</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Starting<sp/>memory<sp/>leak<sp/>check...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>leaks<sp/>command...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>moment<sp/>to<sp/>ensure<sp/>all<sp/>memory<sp/>is<sp/>freed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(100000);<sp/><sp/></highlight><highlight class="comment">//<sp/>100ms<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>system(</highlight><highlight class="stringliteral">&quot;leaks<sp/>test_libft_bonus<sp/>&gt;<sp/>/dev/null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>leaks<sp/>detected!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>memory<sp/>leaks<sp/>detected.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>valgrind...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>system(</highlight><highlight class="stringliteral">&quot;valgrind<sp/>--leak-check=full<sp/>--show-leak-kinds=all<sp/>--track-origins=yes<sp/>--verbose<sp/>--log-file=valgrind-out.txt<sp/>./test_libft_bonus<sp/>&gt;<sp/>/dev/null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Valgrind<sp/>command<sp/>failed<sp/>with<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;valgrind-out.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fp)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>valgrind<sp/>output<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[256];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leaks_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(line),<sp/>fp))<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(line,<sp/></highlight><highlight class="stringliteral">&quot;definitely<sp/>lost:&quot;</highlight><highlight class="normal">)<sp/>||<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(line,<sp/></highlight><highlight class="stringliteral">&quot;indirectly<sp/>lost:&quot;</highlight><highlight class="normal">)<sp/>||<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(line,<sp/></highlight><highlight class="stringliteral">&quot;possibly<sp/>lost:&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(line,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>bytes&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaks_found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Leak<sp/>Detected:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>line);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!leaks_found)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>memory<sp/>leaks<sp/>detected.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlink(</highlight><highlight class="stringliteral">&quot;valgrind-out.txt&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Failed<sp/>to<sp/>remove<sp/>valgrind<sp/>output<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>leak<sp/>check<sp/>completed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>measure<sp/>execution<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" kindref="member">measure_time</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;start,<sp/>NULL);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;end,<sp/>NULL);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(end.tv_sec<sp/>-<sp/>start.tv_sec)<sp/>+<sp/>(end.tv_usec<sp/>-<sp/>start.tv_usec)<sp/>/<sp/>1000000.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>create<sp/>a<sp/>temporary<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="d9/d79/test__libft_8c_1a90f882a65b95a6ba7a366a70ed503b78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a90f882a65b95a6ba7a366a70ed503b78" kindref="member">create_temp_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(fd,<sp/>content,<sp/>strlen(content));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>for<sp/>detailed<sp/>error<sp/>reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="d9/d79/test__libft_8c_1a93076e89428b1a1692e85f51453ae2f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a93076e89428b1a1692e85f51453ae2f0" kindref="member">report_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expected,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*actual)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTest<sp/>Failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>test_name);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expected:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>expected);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Actual:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>actual);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Character<sp/>functions<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="d9/d79/test__libft_8c_1aefd5a0ec59a0f0de0b5289a9cd9b2d41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aefd5a0ec59a0f0de0b5289a9cd9b2d41" kindref="member">test_isalpha</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(-1));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1ac283963beaa3b8c7d09b78851cda297e" kindref="member">ft_isalpha</ref>(128));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="d9/d79/test__libft_8c_1a9c0d208f96bdf47a5cb57c729a8a7f09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a9c0d208f96bdf47a5cb57c729a8a7f09" kindref="member">test_isdigit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(-1));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a2cf15b8a1a277d1e2ce3654101a2003d" kindref="member">ft_isdigit</ref>(128));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="d9/d79/test__libft_8c_1a3ffdb51d3bf93f9197e5fe888f7b5a7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a3ffdb51d3bf93f9197e5fe888f7b5a7d" kindref="member">test_isalnum</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(-1));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9c2c3821ea43ebdf97de07b123503f8b" kindref="member">ft_isalnum</ref>(128));</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="d9/d79/test__libft_8c_1a5ebb97434628b20cf0bb04c3988d40ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a5ebb97434628b20cf0bb04c3988d40ea" kindref="member">test_isascii</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1abf60ddbec6479540e81f3648cf71f1f4" kindref="member">ft_isascii</ref>(0));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1abf60ddbec6479540e81f3648cf71f1f4" kindref="member">ft_isascii</ref>(127));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abf60ddbec6479540e81f3648cf71f1f4" kindref="member">ft_isascii</ref>(128));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abf60ddbec6479540e81f3648cf71f1f4" kindref="member">ft_isascii</ref>(-1));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="d9/d79/test__libft_8c_1af3d3dc6671a75074dc7b63cbca4f75e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1af3d3dc6671a75074dc7b63cbca4f75e0" kindref="member">test_isprint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca" kindref="member">ft_isprint</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca" kindref="member">ft_isprint</ref>(</highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca" kindref="member">ft_isprint</ref>(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca" kindref="member">ft_isprint</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abcdba69692f21146aeea5b3d59b7d0ca" kindref="member">ft_isprint</ref>(128));</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>String<sp/>functions<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" kindref="member">test_strlen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a" kindref="member">ft_strlen</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/><ref refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a" kindref="member">ft_strlen</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a" kindref="member">ft_strlen</ref>(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(100,<sp/><ref refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a" kindref="member">ft_strlen</ref>(</highlight><highlight class="stringliteral">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/><ref refid="db/d79/libft__docs_8h_1abbb8c6c4ed85d892e7f1509f65f5768a" kindref="member">ft_strlen</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="d9/d79/test__libft_8c_1ae1b87c5afaaea495ddaf760e45cfcc31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ae1b87c5afaaea495ddaf760e45cfcc31" kindref="member">test_memset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a19d0a16cec67fe4c1af22f1571f4f8a6" kindref="member">ft_memset</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>5);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;AAAAA&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(str,<sp/>result);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str2[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a19d0a16cec67fe4c1af22f1571f4f8a6" kindref="member">ft_memset</ref>(str2,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>str2);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="d9/d79/test__libft_8c_1abfe29719124f5a41e57bad7a7c005282" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1abfe29719124f5a41e57bad7a7c005282" kindref="member">test_bzero</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a5937ab0d08e31d0e3e4a16ec71e293a1" kindref="member">ft_bzero</ref>(str,<sp/>5);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/>str[0]);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/>str[4]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str2[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a5937ab0d08e31d0e3e4a16ec71e293a1" kindref="member">ft_bzero</ref>(str2,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>str2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="d9/d79/test__libft_8c_1afd336e56c8e975e54a1e5811dc95309f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1afd336e56c8e975e54a1e5811dc95309f" kindref="member">test_memcpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>src[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dest[10];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a5f5c5d19b1f0355d9768c75d30ed5559" kindref="member">ft_memcpy</ref>(dest,<sp/>src,<sp/>6);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>dest);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(dest,<sp/>result);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dest2[10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a5f5c5d19b1f0355d9768c75d30ed5559" kindref="member">ft_memcpy</ref>(dest2,<sp/>src,<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>dest2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="d9/d79/test__libft_8c_1adbdeaedccd2367f1d025fcc3b670dc10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1adbdeaedccd2367f1d025fcc3b670dc10" kindref="member">test_memmove</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1acdc865fa140c03c01a39d74b1f5c2416" kindref="member">ft_memmove</ref>(str<sp/>+<sp/>1,<sp/>str,<sp/>4);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;HHell&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(str<sp/>+<sp/>1,<sp/>result);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1acdc865fa140c03c01a39d74b1f5c2416" kindref="member">ft_memmove</ref>(str2<sp/>+<sp/>1,<sp/>str2,<sp/>0);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>str2);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="d9/d79/test__libft_8c_1a2faeccbd4694bfcb07b91f4f3d058fc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a2faeccbd4694bfcb07b91f4f3d058fc5" kindref="member">test_strlcpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dest[10];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a12f759eb9793cf306fede66d0b7de0fc" kindref="member">ft_strlcpy</ref>(dest,<sp/>src,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dest));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>dest);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/>result);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/><ref refid="db/d79/libft__docs_8h_1a12f759eb9793cf306fede66d0b7de0fc" kindref="member">ft_strlcpy</ref>(dest,<sp/>src,<sp/>0));</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="d9/d79/test__libft_8c_1ae56b2032f4a17d9dbb566ee3adfe7793" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ae56b2032f4a17d9dbb566ee3adfe7793" kindref="member">test_strlcat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dest[20]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a7531453313e0cbfde6fe51662c9c3208" kindref="member">ft_strlcat</ref>(dest,<sp/>src,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dest));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;HelloWorld&quot;</highlight><highlight class="normal">,<sp/>dest);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(10,<sp/>result);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/><ref refid="db/d79/libft__docs_8h_1a7531453313e0cbfde6fe51662c9c3208" kindref="member">ft_strlcat</ref>(dest,<sp/>src,<sp/>0));</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="d9/d79/test__libft_8c_1af7800dba64b8f4ab83a77f20152f6804" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1af7800dba64b8f4ab83a77f20152f6804" kindref="member">test_toupper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12" kindref="member">ft_toupper</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12" kindref="member">ft_toupper</ref>(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12" kindref="member">ft_toupper</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12" kindref="member">ft_toupper</ref>(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aef116be7b5bceafff4b59f20a4433d12" kindref="member">ft_toupper</ref>(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="d9/d79/test__libft_8c_1a31215f0af2569da6b3ee78584fd818d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a31215f0af2569da6b3ee78584fd818d9" kindref="member">test_tolower</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17" kindref="member">ft_tolower</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17" kindref="member">ft_tolower</ref>(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17" kindref="member">ft_tolower</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17" kindref="member">ft_tolower</ref>(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ab86e5297914753b6c82d7e3c3020ce17" kindref="member">ft_tolower</ref>(</highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" kindref="member">test_strchr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;ello&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aa6d0c2d180f32ee585485e1a1ce3d55d" kindref="member">ft_strchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;o&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aa6d0c2d180f32ee585485e1a1ce3d55d" kindref="member">ft_strchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1aa6d0c2d180f32ee585485e1a1ce3d55d" kindref="member">ft_strchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1aa6d0c2d180f32ee585485e1a1ce3d55d" kindref="member">ft_strchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" kindref="member">test_strrchr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;ello&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1a49c260cf80f9997975d6f3ec74ead582" kindref="member">ft_strrchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;o&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1a49c260cf80f9997975d6f3ec74ead582" kindref="member">ft_strrchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a49c260cf80f9997975d6f3ec74ead582" kindref="member">ft_strrchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1a49c260cf80f9997975d6f3ec74ead582" kindref="member">ft_strrchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" kindref="member">test_strncmp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc" kindref="member">ft_strncmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc" kindref="member">ft_strncmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT(<ref refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc" kindref="member">ft_strncmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT(<ref refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc" kindref="member">ft_strncmp</ref>(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9d2fe792187aa4ed08e5864fb2c4d6dc" kindref="member">ft_strncmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="d9/d79/test__libft_8c_1a7d942f0bb7c4ef42734ee0ded29a3e99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a7d942f0bb7c4ef42734ee0ded29a3e99" kindref="member">test_memchr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;ello&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1abf633e8e48a8afbe61947f61de5ac695" kindref="member">ft_memchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;o&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1abf633e8e48a8afbe61947f61de5ac695" kindref="member">ft_memchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1abf633e8e48a8afbe61947f61de5ac695" kindref="member">ft_memchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1abf633e8e48a8afbe61947f61de5ac695" kindref="member">ft_memchr</ref>(str,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="d9/d79/test__libft_8c_1a45684548fb2dd1bf7cbbb4188541e82e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a45684548fb2dd1bf7cbbb4188541e82e" kindref="member">test_memcmp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc" kindref="member">ft_memcmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc" kindref="member">ft_memcmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT(<ref refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc" kindref="member">ft_memcmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT(<ref refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc" kindref="member">ft_memcmp</ref>(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a08f665a1828c402f2ffe2e2187f135fc" kindref="member">ft_memcmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" kindref="member">test_strnstr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*big<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello<sp/>World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ae00229613cc0bf361e86dca72ad92591" kindref="member">ft_strnstr</ref>(big,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>11));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ae00229613cc0bf361e86dca72ad92591" kindref="member">ft_strnstr</ref>(big,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>20));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1ae00229613cc0bf361e86dca72ad92591" kindref="member">ft_strnstr</ref>(big,<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello<sp/>World&quot;</highlight><highlight class="normal">,<sp/><ref refid="db/d79/libft__docs_8h_1ae00229613cc0bf361e86dca72ad92591" kindref="member">ft_strnstr</ref>(big,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>11));</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="d9/d79/test__libft_8c_1a7046e5fb801359527dfbcb5b09b3b92a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a7046e5fb801359527dfbcb5b09b3b92a" kindref="member">test_atoi</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(42,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(-42,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;-42&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(42,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;+42&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(2147483647,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;2147483647&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(-2147483648,<sp/><ref refid="db/d79/libft__docs_8h_1afad2ec371b4188602da9a94db687cb16" kindref="member">ft_atoi</ref>(</highlight><highlight class="stringliteral">&quot;-2147483648&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="d9/d79/test__libft_8c_1a764c620aaa65aaef8a3d74d58e93c89a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a764c620aaa65aaef8a3d74d58e93c89a" kindref="member">test_calloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*arr<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1ae0a6807f9f78ed4bf4f958323582d22f" kindref="member">ft_calloc</ref>(5,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(arr);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/>arr[i]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>free(arr);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1ae0a6807f9f78ed4bf4f958323582d22f" kindref="member">ft_calloc</ref>(0,<sp/>5);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ptr);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1ae0a6807f9f78ed4bf4f958323582d22f" kindref="member">ft_calloc</ref>(5,<sp/>0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ptr);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1ae0a6807f9f78ed4bf4f958323582d22f" kindref="member">ft_calloc</ref>(SIZE_MAX,<sp/>SIZE_MAX));</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" kindref="member">test_strdup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a2ac2079a4250507c9af75d696f2ae476" kindref="member">ft_strdup</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(str1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>str1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a2ac2079a4250507c9af75d696f2ae476" kindref="member">ft_strdup</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(str2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>str2);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a2ac2079a4250507c9af75d696f2ae476" kindref="member">ft_strdup</ref>(</highlight><highlight class="stringliteral">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(str3);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</highlight><highlight class="normal">,<sp/>str3);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str3);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" kindref="member">test_substr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello<sp/>World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sub<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a78c402cbf3d55b1374693c3b7d34f71d" kindref="member">ft_substr</ref>(str,<sp/>6,<sp/>5);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>sub);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sub);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a78c402cbf3d55b1374693c3b7d34f71d" kindref="member">ft_substr</ref>(NULL,<sp/>0,<sp/>5));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>invalid<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a78c402cbf3d55b1374693c3b7d34f71d" kindref="member">ft_substr</ref>(str,<sp/>20,<sp/>5);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>sub);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sub);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a78c402cbf3d55b1374693c3b7d34f71d" kindref="member">ft_substr</ref>(str,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>sub);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sub);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" kindref="member">test_strjoin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*joined<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a91e6e3e428bcc9f2291b700e1829b82b" kindref="member">ft_strjoin</ref>(s1,<sp/>s2);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;HelloWorld&quot;</highlight><highlight class="normal">,<sp/>joined);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>free(joined);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a91e6e3e428bcc9f2291b700e1829b82b" kindref="member">ft_strjoin</ref>(NULL,<sp/>s2));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a91e6e3e428bcc9f2291b700e1829b82b" kindref="member">ft_strjoin</ref>(s1,<sp/>NULL));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>joined<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a91e6e3e428bcc9f2291b700e1829b82b" kindref="member">ft_strjoin</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>joined);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>free(joined);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" kindref="member">test_strtrim</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Hello<sp/>World<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*set<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*trimmed<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a60352c5b39fab08469b3e28131a79e25" kindref="member">ft_strtrim</ref>(str,<sp/>set);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello<sp/>World&quot;</highlight><highlight class="normal">,<sp/>trimmed);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>free(trimmed);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a60352c5b39fab08469b3e28131a79e25" kindref="member">ft_strtrim</ref>(NULL,<sp/>set));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a60352c5b39fab08469b3e28131a79e25" kindref="member">ft_strtrim</ref>(str,<sp/>NULL));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>trimmed<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a60352c5b39fab08469b3e28131a79e25" kindref="member">ft_strtrim</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>set);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>trimmed);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>free(trimmed);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" kindref="member">test_split</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>normal<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4" kindref="member">ft_split</ref>(</highlight><highlight class="stringliteral">&quot;Hello<sp/>World&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(result);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>result[0]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>result[1]);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(result[2]);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result[0]);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result[1]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4" kindref="member">ft_split</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(result);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(result[0]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>multiple<sp/>delimiters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4" kindref="member">ft_split</ref>(</highlight><highlight class="stringliteral">&quot;Hello<sp/><sp/><sp/>World&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(result);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>result[0]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;World&quot;</highlight><highlight class="normal">,<sp/>result[1]);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(result[2]);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result[0]);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result[1]);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>no<sp/>delimiters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4" kindref="member">ft_split</ref>(</highlight><highlight class="stringliteral">&quot;HelloWorld&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(result);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;HelloWorld&quot;</highlight><highlight class="normal">,<sp/>result[0]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(result[1]);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result[0]);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1aa65c9de65051c8c589286cf133c4a1f4" kindref="member">ft_split</ref>(NULL,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(result);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="d9/d79/test__libft_8c_1abb295917a3eb14e4e20419e367522431" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1abb295917a3eb14e4e20419e367522431" kindref="member">test_itoa</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38" kindref="member">ft_itoa</ref>(42);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38" kindref="member">ft_itoa</ref>(-42);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;-42&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38" kindref="member">ft_itoa</ref>(0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38" kindref="member">ft_itoa</ref>(2147483647);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;2147483647&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8a6ea3765dfd826eabfc00d36e28ea38" kindref="member">ft_itoa</ref>(-2147483648);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;-2147483648&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" kindref="member">test_map</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)i;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" kindref="member">test_strmapi</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mapped<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a668b60557bfc9d60c2d3ccda8afadf49" kindref="member">ft_strmapi</ref>(str,<sp/><ref refid="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" kindref="member">test_map</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Ifmmp&quot;</highlight><highlight class="normal">,<sp/>mapped);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>free(mapped);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>mapped<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a668b60557bfc9d60c2d3ccda8afadf49" kindref="member">ft_strmapi</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a902aac0c94ab52bbe4bdaad993893777" kindref="member">test_map</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>mapped);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>free(mapped);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>test_striteri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>*c<sp/>=<sp/>*c<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" kindref="member">test_striteri</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ada722cffd2c6c8169ae339afd0f9763c" kindref="member">ft_striteri</ref>(str,<sp/><ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hfnos&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="d9/d79/test__libft_8c_1a59656c038fcaeafc75f3f17293bd4353" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a59656c038fcaeafc75f3f17293bd4353" kindref="member">test_putchar_fd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a8ee15a511946c1397bd2bdea4aed6aee" kindref="member">ft_putchar_fd</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>bytes_read<sp/>=<sp/>read(fd,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="d9/d79/test__libft_8c_1aa83e8b318d56689656bd962ece77310e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aa83e8b318d56689656bd962ece77310e" kindref="member">test_putstr_fd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1acefce9ac519f8f8b7d3fde33dbafe469" kindref="member">ft_putstr_fd</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[10]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>bytes_read<sp/>=<sp/>read(fd,<sp/>str,<sp/>5);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(5,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="d9/d79/test__libft_8c_1a709c447b36199b558f6e1c75a10f69cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a709c447b36199b558f6e1c75a10f69cf" kindref="member">test_putendl_fd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1aeb112152acfc553d58d61a5df38afcde" kindref="member">ft_putendl_fd</ref>(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[10]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>bytes_read<sp/>=<sp/>read(fd,<sp/>str,<sp/>6);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(6,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Hello\n&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="d9/d79/test__libft_8c_1a705bb4e217c9c6cae26a0b532c1c9dd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a705bb4e217c9c6cae26a0b532c1c9dd6" kindref="member">test_putnbr_fd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a63cc0aec12256d125d3f85e472280972" kindref="member">ft_putnbr_fd</ref>(42,<sp/>fd);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_EQUAL(-1,<sp/>fd);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[10]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>bytes_read<sp/>=<sp/>read(fd,<sp/>str,<sp/>2);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(2,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink(</highlight><highlight class="stringliteral">&quot;temp.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>print<sp/>section<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" kindref="member">print_section_header</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\033[1;35m===<sp/>%s<sp/>===\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>title);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>print<sp/>test<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stage)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\033[1;34m%s\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>stage);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>print<sp/>test<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="d9/d79/test__libft_8c_1ada2de3e04244dd364751d67e6cecfe70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ada2de3e04244dd364751d67e6cecfe70" kindref="member">print_test_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>passed)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(passed)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\033[1;32m✓<sp/>%s\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>test_name);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\033[1;31m✗<sp/>%s\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>test_name);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>print<sp/>performance<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="d9/d79/test__libft_8c_1a99ef34d7b4a3656995a54afa84f64eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a99ef34d7b4a3656995a54afa84f64eb0" kindref="member">print_performance_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_taken)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\033[1;36m%s:<sp/>%.6f<sp/>seconds\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>test_name,<sp/>time_taken);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>performance<sp/>test<sp/>wrapper<sp/>with<sp/>error<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_taken<sp/>=<sp/><ref refid="d9/d79/test__libft_8c_1a101eb1911ded870e6d57d5eac3838d78" kindref="member">measure_time</ref>(<ref refid="d9/d79/test__libft_8c_1a372c6b70a124adbdd844ca7e3b70d527" kindref="member">test_func</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a99ef34d7b4a3656995a54afa84f64eb0" kindref="member">print_performance_result</ref>(test_name,<sp/>time_taken);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>for<sp/>list<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="d9/d79/test__libft_8c_1afc36acc09a6f5e42bd176a6264d3b563" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1afc36acc09a6f5e42bd176a6264d3b563" kindref="member">modify_content</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*content)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)content;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" kindref="member">map_content</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*content)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)content;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_str<sp/>=<sp/>strdup(str);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>new_str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_str;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dummy<sp/>free<sp/>function<sp/>for<sp/>integer<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>{<sp/>(void)ptr;<sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bonus<sp/>list<sp/>functions<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="d9/d79/test__libft_8c_1a5d0832d96a4d284dfff3806d3c3c32c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a5d0832d96a4d284dfff3806d3c3c32c0" kindref="member">test_lstnew</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>normal<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(node);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(&amp;content,<sp/>node-&gt;content);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node-&gt;next);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(NULL);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(node);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node-&gt;content);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node-&gt;next);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>string<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(node);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)node-&gt;content);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node-&gt;next);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node-&gt;content);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" kindref="member">test_lstadd_front</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>to<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771" kindref="member">ft_lstadd_front</ref>(&amp;list,<sp/>node1);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>list);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node1-&gt;next);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>to<sp/>non-empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content2);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771" kindref="member">ft_lstadd_front</ref>(&amp;list,<sp/>node2);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node2,<sp/>list);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>node2-&gt;next);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node1-&gt;next);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content3);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771" kindref="member">ft_lstadd_front</ref>(&amp;list,<sp/>node3);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node3,<sp/>list);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node2,<sp/>node3-&gt;next);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>node2-&gt;next);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node1-&gt;next);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>list<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node4<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771" kindref="member">ft_lstadd_front</ref>(NULL,<sp/>node4);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node4);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a0195e4eb88fad15717ed90524ac15771" kindref="member">ft_lstadd_front</ref>(&amp;list,<sp/>NULL);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(list);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" kindref="member">test_lstsize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9da614988ac99446db9df99d2c773fc1" kindref="member">ft_lstsize</ref>(list));</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(1,<sp/><ref refid="db/d79/libft__docs_8h_1a9da614988ac99446db9df99d2c773fc1" kindref="member">ft_lstsize</ref>(list));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content2);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content3);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>node1-&gt;next<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>node2-&gt;next<sp/>=<sp/>node3;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(3,<sp/><ref refid="db/d79/libft__docs_8h_1a9da614988ac99446db9df99d2c773fc1" kindref="member">ft_lstsize</ref>(list));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>NULL<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(0,<sp/><ref refid="db/d79/libft__docs_8h_1a9da614988ac99446db9df99d2c773fc1" kindref="member">ft_lstsize</ref>(NULL));</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" kindref="member">test_lstlast</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1aed5f9b5ecc45235a7b7cf9d4b24e43dc" kindref="member">ft_lstlast</ref>(list));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/><ref refid="db/d79/libft__docs_8h_1aed5f9b5ecc45235a7b7cf9d4b24e43dc" kindref="member">ft_lstlast</ref>(list));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content2);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content3);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>node1-&gt;next<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>node2-&gt;next<sp/>=<sp/>node3;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node3,<sp/><ref refid="db/d79/libft__docs_8h_1aed5f9b5ecc45235a7b7cf9d4b24e43dc" kindref="member">ft_lstlast</ref>(list));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>NULL<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1aed5f9b5ecc45235a7b7cf9d4b24e43dc" kindref="member">ft_lstlast</ref>(NULL));</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" kindref="member">test_lstadd_back</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>to<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4" kindref="member">ft_lstadd_back</ref>(&amp;list,<sp/>node1);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>list);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node1-&gt;next);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>to<sp/>non-empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content2);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4" kindref="member">ft_lstadd_back</ref>(&amp;list,<sp/>node2);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>list);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node2,<sp/>node1-&gt;next);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node2-&gt;next);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>adding<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content3);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4" kindref="member">ft_lstadd_back</ref>(&amp;list,<sp/>node3);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node1,<sp/>list);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node2,<sp/>node1-&gt;next);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_PTR(node3,<sp/>node2-&gt;next);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(node3-&gt;next);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>list<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node4<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content1);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4" kindref="member">ft_lstadd_back</ref>(NULL,<sp/>node4);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node4);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a4c10e88fffc3c9467eb16e6debd227a4" kindref="member">ft_lstadd_back</ref>(&amp;list,<sp/>NULL);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(list);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" kindref="member">test_lstdelone</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>normal<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str1);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node1,<sp/>free);<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>frees<sp/>both<sp/>content<sp/>and<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(NULL,<sp/>free);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>del<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str2);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node2,<sp/>NULL);<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>doesn&apos;t<sp/>free<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str2);<sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>content<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node2);<sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>node<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>integer<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node3,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>frees<sp/>both<sp/>content<sp/>and<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="d9/d79/test__libft_8c_1aadf5b3dd0490b6167b824d3065037336" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aadf5b3dd0490b6167b824d3065037336" kindref="member">test_lstclear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>free);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(list);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str1);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>free);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(list);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str3<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str2);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str3);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>node2-&gt;next<sp/>=<sp/>node3;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>free);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(list);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>list<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(NULL,<sp/>free);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>del<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str4<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str4);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>NULL);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str4);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node1);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" kindref="member">test_lstiter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d" kindref="member">ft_lstiter</ref>(list,<sp/>NULL);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str1);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d" kindref="member">ft_lstiter</ref>(list,<sp/>NULL);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str3<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str2);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str3);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>node1-&gt;next<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>node2-&gt;next<sp/>=<sp/>node3;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d" kindref="member">ft_lstiter</ref>(list,<sp/>NULL);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d" kindref="member">ft_lstiter</ref>(list,<sp/><ref refid="d9/d79/test__libft_8c_1afc36acc09a6f5e42bd176a6264d3b563" kindref="member">modify_content</ref>);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest1&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)node1-&gt;content);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest2&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)node2-&gt;content);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest3&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)node3-&gt;content);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>free);</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" kindref="member">test_lstmap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*new_list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6" kindref="member">ft_lstmap</ref>(NULL,<sp/>NULL,<sp/>NULL));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str1);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>node1;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>NULL<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(<ref refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6" kindref="member">ft_lstmap</ref>(list,<sp/>NULL,<sp/>NULL));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>new_list<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6" kindref="member">ft_lstmap</ref>(list,<sp/><ref refid="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" kindref="member">map_content</ref>,<sp/>free);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(new_list);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest1&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)new_list-&gt;content);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(new_list-&gt;next);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;new_list,<sp/>free);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>multiple<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str3<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str2);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str3);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>node1-&gt;next<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>node2-&gt;next<sp/>=<sp/>node3;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>new_list<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6" kindref="member">ft_lstmap</ref>(list,<sp/><ref refid="d9/d79/test__libft_8c_1a58a87ccb3380c4a407c305d35892a03c" kindref="member">map_content</ref>,<sp/>free);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(new_list);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest1&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)new_list-&gt;content);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(new_list-&gt;next);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest2&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)new_list-&gt;next-&gt;content);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NOT_NULL(new_list-&gt;next-&gt;next);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL_STRING(</highlight><highlight class="stringliteral">&quot;Xest3&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)new_list-&gt;next-&gt;next-&gt;content);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_NULL(new_list-&gt;next-&gt;next-&gt;next);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;new_list,<sp/>free);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1a6e900cfaea2857bbf490f3105e38da93" kindref="member">ft_lstclear</ref>(&amp;list,<sp/>free);</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="d9/d79/test__libft_8c_1aaa6fe355b7e741f8492178d77470da65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1aaa6fe355b7e741f8492178d77470da65" kindref="member">test_lstdelone_direct</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n===<sp/>Testing<sp/>ft_lstdelone<sp/>directly<sp/>===\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>1:<sp/>Normal<sp/>case<sp/>with<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTest<sp/>1:<sp/>Normal<sp/>case<sp/>with<sp/>free\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node1<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str1);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Before:<sp/>node1=%p,<sp/>content=%s\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node1-&gt;content);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node1,<sp/>free);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;After:<sp/>node1=%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node1);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>2:<sp/>NULL<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTest<sp/>2:<sp/>NULL<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(NULL,<sp/>free);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>crash<sp/>with<sp/>NULL<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3:<sp/>NULL<sp/>del<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTest<sp/>3:<sp/>NULL<sp/>del<sp/>function\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node2<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(str2);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Before:<sp/>node2=%p,<sp/>content=%s\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node2,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node2-&gt;content);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node2,<sp/>NULL);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;After:<sp/>node2=%p,<sp/>content=%s\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node2,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node2-&gt;content);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str2);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>free(node2);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>4:<sp/>Integer<sp/>content<sp/>with<sp/>dummy_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTest<sp/>4:<sp/>Integer<sp/>content<sp/>with<sp/>dummy_free\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>t_list<sp/>*node3<sp/>=<sp/><ref refid="db/d79/libft__docs_8h_1a8fe4ea6f56f5a2a75ee13d97416b60ed" kindref="member">ft_lstnew</ref>(&amp;content);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Before:<sp/>node3=%p,<sp/>content=%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node3,<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)node3-&gt;content);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d79/libft__docs_8h_1ac2b881501f9ee2f3ed5718f6d9ebee7c" kindref="member">ft_lstdelone</ref>(node3,<sp/><ref refid="d9/d79/test__libft_8c_1a26bdcef76c58d6cdcfeeb99eefc2bff6" kindref="member">dummy_free</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;After:<sp/>node3=%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node3);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n===<sp/>Direct<sp/>test<sp/>complete<sp/>===\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modify<sp/>main<sp/>to<sp/>run<sp/>tests<sp/>in<sp/>stages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/d79/test__libft_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_BEGIN();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" kindref="member">print_section_header</ref>(</highlight><highlight class="stringliteral">&quot;Running<sp/>Standard<sp/>Tests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>1:<sp/>Basic<sp/>character<sp/>and<sp/>string<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>1:<sp/>Basic<sp/>character<sp/>and<sp/>string<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1aefd5a0ec59a0f0de0b5289a9cd9b2d41" kindref="member">test_isalpha</ref>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a9c0d208f96bdf47a5cb57c729a8a7f09" kindref="member">test_isdigit</ref>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a3ffdb51d3bf93f9197e5fe888f7b5a7d" kindref="member">test_isalnum</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a5ebb97434628b20cf0bb04c3988d40ea" kindref="member">test_isascii</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1af3d3dc6671a75074dc7b63cbca4f75e0" kindref="member">test_isprint</ref>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" kindref="member">test_strlen</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ae1b87c5afaaea495ddaf760e45cfcc31" kindref="member">test_memset</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1abfe29719124f5a41e57bad7a7c005282" kindref="member">test_bzero</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1afd336e56c8e975e54a1e5811dc95309f" kindref="member">test_memcpy</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1adbdeaedccd2367f1d025fcc3b670dc10" kindref="member">test_memmove</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a2faeccbd4694bfcb07b91f4f3d058fc5" kindref="member">test_strlcpy</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ae56b2032f4a17d9dbb566ee3adfe7793" kindref="member">test_strlcat</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1af7800dba64b8f4ab83a77f20152f6804" kindref="member">test_toupper</ref>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a31215f0af2569da6b3ee78584fd818d9" kindref="member">test_tolower</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>2:<sp/>String<sp/>search<sp/>and<sp/>comparison<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>2:<sp/>String<sp/>search<sp/>and<sp/>comparison<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" kindref="member">test_strchr</ref>);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" kindref="member">test_strrchr</ref>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" kindref="member">test_strncmp</ref>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a7d942f0bb7c4ef42734ee0ded29a3e99" kindref="member">test_memchr</ref>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a45684548fb2dd1bf7cbbb4188541e82e" kindref="member">test_memcmp</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" kindref="member">test_strnstr</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a7046e5fb801359527dfbcb5b09b3b92a" kindref="member">test_atoi</ref>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>3:<sp/>Memory<sp/>allocation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>3:<sp/>Memory<sp/>allocation<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a764c620aaa65aaef8a3d74d58e93c89a" kindref="member">test_calloc</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" kindref="member">test_strdup</ref>);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>4:<sp/>String<sp/>manipulation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>4:<sp/>String<sp/>manipulation<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" kindref="member">test_substr</ref>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" kindref="member">test_strjoin</ref>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" kindref="member">test_strtrim</ref>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" kindref="member">test_split</ref>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1abb295917a3eb14e4e20419e367522431" kindref="member">test_itoa</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ad039127e6354b0c92af33c7852d7761f" kindref="member">test_strmapi</ref>);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a46fc6648e2524106abfc8e85b3ffd4d9" kindref="member">test_striteri</ref>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>5:<sp/>File<sp/>descriptor<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>5:<sp/>File<sp/>descriptor<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a59656c038fcaeafc75f3f17293bd4353" kindref="member">test_putchar_fd</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1aa83e8b318d56689656bd962ece77310e" kindref="member">test_putstr_fd</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a709c447b36199b558f6e1c75a10f69cf" kindref="member">test_putendl_fd</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a705bb4e217c9c6cae26a0b532c1c9dd6" kindref="member">test_putnbr_fd</ref>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BONUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stage<sp/>6:<sp/>Bonus<sp/>list<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Stage<sp/>6:<sp/>Bonus<sp/>list<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a5d0832d96a4d284dfff3806d3c3c32c0" kindref="member">test_lstnew</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1aa3e34250a28da8f72a0fd1ce2d176d42" kindref="member">test_lstadd_front</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a49c808b6eb5acff5b3d484195feb1a3a" kindref="member">test_lstsize</ref>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a76984233d16b0dd8384573bcf043b4cd" kindref="member">test_lstlast</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ad6ba135c31e0d04cb5d221903bab6514" kindref="member">test_lstadd_back</ref>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a22b67bd0a819f48f1afcc0ea492308a3" kindref="member">test_lstdelone</ref>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1aadf5b3dd0490b6167b824d3065037336" kindref="member">test_lstclear</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1a0da22653eab7c346edb0b7402736d630" kindref="member">test_lstiter</ref>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(<ref refid="d9/d79/test__libft_8c_1ae5d801767f222dd8fd8d822017a8c76d" kindref="member">test_lstmap</ref>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" kindref="member">print_section_header</ref>(</highlight><highlight class="stringliteral">&quot;Running<sp/>Performance<sp/>Tests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>tests<sp/>for<sp/>memory-intensive<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>memory-intensive<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strdup&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a7e0f68777457510617ba4332f9a5b29a" kindref="member">test_strdup</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;split&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a3c6cf2600fb56e147f568874cdad9a63" kindref="member">test_split</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strjoin&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a07428bbcc3f756840b2ac2b6d5cced3e" kindref="member">test_strjoin</ref>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;substr&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a0d46b2054f033152591a9174189b4eb3" kindref="member">test_substr</ref>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strtrim&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1aba6028400ecc1b9717cd9e4c42c8815c" kindref="member">test_strtrim</ref>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>tests<sp/>for<sp/>string<sp/>manipulation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1aff62e61faa3d67575eec60f5030dca75" kindref="member">print_test_stage</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>string<sp/>manipulation<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strlen&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1ab6533a2d0860e9f95bf8a8bc5ac50cd6" kindref="member">test_strlen</ref>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strchr&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a11c50a6fe71c03df8367ffdafe96eab8" kindref="member">test_strchr</ref>);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strrchr&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a42e67aa7487605e77f3ff953e574dcd0" kindref="member">test_strrchr</ref>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strncmp&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a4c0e97dfc186f1e846a311f81c0c0184" kindref="member">test_strncmp</ref>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a96fa228a0809e7e80427e852d8bbf30e" kindref="member">run_performance_test</ref>(</highlight><highlight class="stringliteral">&quot;strnstr&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d79/test__libft_8c_1a0527d791bdbd61958cd0e6497f9cf01f" kindref="member">test_strnstr</ref>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1acd0bbd4f5f6e04b4f11ade7757be3c13" kindref="member">print_section_header</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>Summary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\033[1;32mAll<sp/>tests<sp/>completed<sp/>successfully!\033[0m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNITY_END();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="test_libft.c"/>
  </compounddef>
</doxygen>
