<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d5/ddd/unity_8c" kind="file" language="C++">
    <compoundname>unity.c</compoundname>
    <includes local="yes">unity.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="1">
        <label>unity/unity.c</label>
        <link refid="d5/ddd/unity_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>unity.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" prot="public" static="no">
        <name>PROGMEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="13" column="10" bodyfile="unity/unity.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" prot="public" static="no">
        <name>UNITY_FAIL_AND_BAIL</name>
        <initializer>{ Unity.CurrentTestFailed  = 1; UNITY_OUTPUT_FLUSH(); TEST_ABORT(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="22" column="9" bodyfile="unity/unity.c" bodystart="22" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1a8e7615065c9272a62eede0f1e725a774" prot="public" static="no">
        <name>UNITY_IGNORE_AND_BAIL</name>
        <initializer>{ Unity.CurrentTestIgnored = 1; UNITY_OUTPUT_FLUSH(); TEST_ABORT(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="23" column="9" bodyfile="unity/unity.c" bodystart="23" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" prot="public" static="no">
        <name>RETURN_IF_FAIL_OR_IGNORE</name>
        <initializer>if (Unity.CurrentTestFailed || Unity.CurrentTestIgnored) TEST_ABORT()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="24" column="9" bodyfile="unity/unity.c" bodystart="24" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" prot="public" static="no">
        <name>UnityPrintPointlessAndBail</name>
        <param></param>
        <initializer>{                                          \
    <ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber); \
    <ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a3512e59b7ef2269347af3afa0671ba84" kindref="member">UnityStrPointless</ref>);         \
    <ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);           \
    <ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="767" column="9" bodyfile="unity/unity.c" bodystart="767" bodyend="772"/>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1a02810feed4a9aca0b2f997854b94a01c" prot="public" static="no">
        <name>UNITY_FLOAT_OR_DOUBLE_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>diff</defname></param>
        <initializer>    if (isinf(expected) &amp;&amp; isinf(actual) &amp;&amp; (((expected) &lt; 0) == ((actual) &lt; 0))) return 1;   \
    if (<ref refid="d5/ddd/unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" kindref="member">UNITY_NAN_CHECK</ref>) return 1;                                                            \
    (diff) = (actual) - (expected);                                                           \
    if ((diff) &lt; 0) (diff) = -(diff);                                                         \
    if ((delta) &lt; 0) (delta) = -(delta);                                                      \
    return !(isnan(diff) || isinf(diff) || ((diff) &gt; (delta)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="871" column="9" bodyfile="unity/unity.c" bodystart="871" bodyend="877"/>
        <referencedby refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" compoundref="d5/ddd/unity_8c" startline="898" endline="902">UnityFloatsWithin</referencedby>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" prot="public" static="no">
        <name>UNITY_NAN_CHECK</name>
        <initializer>isnan(expected) &amp;&amp; isnan(actual)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="880" column="11" bodyfile="unity/unity.c" bodystart="880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" prot="public" static="no">
        <name>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <initializer>  {                                                               \
    <ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);                                 \
    <ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(expected);                                    \
    <ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);                                      \
    <ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(actual); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="886" column="11" bodyfile="unity/unity.c" bodystart="886" bodyend="891"/>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" prot="public" static="no" mutable="no">
        <type>struct UNITY_STORAGE_T</type>
        <definition>struct UNITY_STORAGE_T Unity</definition>
        <argsstring></argsstring>
        <name>Unity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="26" column="22" bodyfile="unity/unity.c" bodystart="26" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" compoundref="d5/ddd/unity_8c" startline="1855" endline="1868">UnityBegin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" compoundref="d5/ddd/unity_8c" startline="541" endline="562">UnityConcludeTest</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="d5/ddd/unity_8c" startline="1827" endline="1845">UnityDefaultTestRun</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" compoundref="d5/ddd/unity_8c" startline="1811" endline="1822">UnityMessage</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1afefd1b90b9854b428fef009e12489282" compoundref="d5/ddd/unity_8c" startline="1849" endline="1852">UnitySetTestFile</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrOk[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrOk</name>
        <initializer>= &quot;OK&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="34" column="13" bodyfile="unity/unity.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrPass[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrPass</name>
        <initializer>= &quot;PASS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="35" column="13" bodyfile="unity/unity.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" compoundref="d5/ddd/unity_8c" startline="541" endline="562">UnityConcludeTest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrFail[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrFail</name>
        <initializer>= &quot;FAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="36" column="13" bodyfile="unity/unity.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrIgnore[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrIgnore</name>
        <initializer>= &quot;IGNORE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="37" column="13" bodyfile="unity/unity.c" bodystart="37" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNull[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNull</name>
        <initializer>= &quot;NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="39" column="20" bodyfile="unity/unity.c" bodystart="39" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrSpacer[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrSpacer</name>
        <initializer>= &quot;. &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="40" column="20" bodyfile="unity/unity.c" bodystart="40" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrExpected[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrExpected</name>
        <initializer>= &quot; Expected &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="41" column="20" bodyfile="unity/unity.c" bodystart="41" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrWas[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrWas</name>
        <initializer>= &quot; Was &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="42" column="20" bodyfile="unity/unity.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrGt[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrGt</name>
        <initializer>= &quot; to be greater than &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="43" column="20" bodyfile="unity/unity.c" bodystart="43" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrLt[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrLt</name>
        <initializer>= &quot; to be less than &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="44" column="20" bodyfile="unity/unity.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrOrEqual[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrOrEqual</name>
        <initializer>= &quot;or equal to &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="45" column="20" bodyfile="unity/unity.c" bodystart="45" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ae64ddfd97cd176f90700261b38b2779a" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNotEqual[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNotEqual</name>
        <initializer>= &quot; to be not equal to &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="46" column="20" bodyfile="unity/unity.c" bodystart="46" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrElement[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrElement</name>
        <initializer>= &quot; Element &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="47" column="20" bodyfile="unity/unity.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrByte[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrByte</name>
        <initializer>= &quot; Byte &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="48" column="20" bodyfile="unity/unity.c" bodystart="48" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrMemory[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrMemory</name>
        <initializer>= &quot; Memory Mismatch.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="49" column="20" bodyfile="unity/unity.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDelta[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDelta</name>
        <initializer>= &quot; Values Not Within Delta &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="50" column="20" bodyfile="unity/unity.c" bodystart="50" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a3512e59b7ef2269347af3afa0671ba84" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrPointless[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrPointless</name>
        <initializer>= &quot; You Asked Me To Compare Nothing, Which Was Pointless.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="51" column="20" bodyfile="unity/unity.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNullPointerForExpected[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNullPointerForExpected</name>
        <initializer>= &quot; Expected pointer to be NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="52" column="20" bodyfile="unity/unity.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a62e630267be1d3697cb3bb4198dd089a" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNullPointerForActual[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNullPointerForActual</name>
        <initializer>= &quot; Actual pointer was NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="53" column="20" bodyfile="unity/unity.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNot[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNot</name>
        <initializer>= &quot;Not &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="55" column="20" bodyfile="unity/unity.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrInf[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrInf</name>
        <initializer>= &quot;Infinity&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="56" column="20" bodyfile="unity/unity.c" bodystart="56" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNegInf[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNegInf</name>
        <initializer>= &quot;Negative Infinity&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="57" column="20" bodyfile="unity/unity.c" bodystart="57" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNaN[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNaN</name>
        <initializer>= &quot;NaN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="58" column="20" bodyfile="unity/unity.c" bodystart="58" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDet[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDet</name>
        <initializer>= &quot;Determinate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="59" column="20" bodyfile="unity/unity.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrInvalidFloatTrait[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrInvalidFloatTrait</name>
        <initializer>= &quot;Invalid Float Trait&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="60" column="20" bodyfile="unity/unity.c" bodystart="60" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a1e2d7034b98b9532ec094f55b909e99b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrShorthand[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrShorthand</name>
        <initializer>= &quot;Unity Shorthand Support Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="62" column="13" bodyfile="unity/unity.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ab644636442c612d56dfadc6970d2af67" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrFloat[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrFloat</name>
        <initializer>= &quot;Unity Floating Point Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="63" column="13" bodyfile="unity/unity.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ac8d03220554dfa13081f6a057ced349e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrDouble[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrDouble</name>
        <initializer>= &quot;Unity Double Precision Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="64" column="13" bodyfile="unity/unity.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1af5c213ecde93420aed908a92a5b32c66" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErr64[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErr64</name>
        <initializer>= &quot;Unity 64-bit Support Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="65" column="13" bodyfile="unity/unity.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrBreaker[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrBreaker</name>
        <initializer>= &quot;-----------------------&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="66" column="20" bodyfile="unity/unity.c" bodystart="66" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsTests[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsTests</name>
        <initializer>= &quot; Tests &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="67" column="20" bodyfile="unity/unity.c" bodystart="67" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsFailures[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsFailures</name>
        <initializer>= &quot; Failures &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="68" column="20" bodyfile="unity/unity.c" bodystart="68" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ab866d9dfd564414877c69e753e7e382e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsIgnored[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsIgnored</name>
        <initializer>= &quot; Ignored &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="69" column="20" bodyfile="unity/unity.c" bodystart="69" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDetail1Name[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDetail1Name</name>
        <initializer>= &quot;Function&quot; &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="71" column="20" bodyfile="unity/unity.c" bodystart="71" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDetail2Name[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDetail2Name</name>
        <initializer>= &quot; &quot; &quot;Argument&quot; &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="72" column="20" bodyfile="unity/unity.c" bodystart="72" bodyend="-1"/>
        <referencedby refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ad20eed15082bd5f03fa33cf3014e9a99" prot="public" static="no" mutable="no">
        <type>UNITY_INT8</type>
        <definition>UNITY_INT8 i8</definition>
        <argsstring></argsstring>
        <name>i8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1570" column="16" bodyfile="unity/unity.c" bodystart="1570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a3ff3d9c5010aa22165fa26f8e301131e" prot="public" static="no" mutable="no">
        <type>UNITY_INT16</type>
        <definition>UNITY_INT16 i16</definition>
        <argsstring></argsstring>
        <name>i16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1571" column="17" bodyfile="unity/unity.c" bodystart="1571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1ae9d133be8ac33cfb99b5b9646d7a5a87" prot="public" static="no" mutable="no">
        <type>UNITY_INT32</type>
        <definition>UNITY_INT32 i32</definition>
        <argsstring></argsstring>
        <name>i32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1572" column="17" bodyfile="unity/unity.c" bodystart="1572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1af900396d7b72ff2a7002e8befe8cf8f1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1577" column="11" bodyfile="unity/unity.c" bodystart="1577" bodyend="-1"/>
        <referencedby refid="db/d79/libft__docs_8h_1a1888c62a89ec3d206f2ed4590f4a021d">ft_lstiter</referencedby>
        <referencedby refid="db/d79/libft__docs_8h_1a8198d1837ffbba05823f5e85afebf9c6">ft_lstmap</referencedby>
        <referencedby refid="db/d79/libft__docs_8h_1ada722cffd2c6c8169ae339afd0f9763c">ft_striteri</referencedby>
        <referencedby refid="db/d79/libft__docs_8h_1a668b60557bfc9d60c2d3ccda8afadf49">ft_strmapi</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" prot="public" static="yes" mutable="no">
        <type>union </type>
        <definition>union  UnityQuickCompare</definition>
        <argsstring></argsstring>
        <name>UnityQuickCompare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1582" column="19"/>
        <referencedby refid="d5/ddd/unity_8c_1a4226621ea2a6ee64b626dece4f566614" compoundref="d5/ddd/unity_8c" startline="1610" endline="1614">UnityFloatToPtr</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1af2af69f480a8fd2e98b3cef667c3c61c" compoundref="d5/ddd/unity_8c" startline="1584" endline="1606">UnityNumToPtr</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityPrintChar</definition>
        <argsstring>(const char *pch)</argsstring>
        <name>UnityPrintChar</name>
        <param>
          <type>const char *</type>
          <declname>pch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="80" column="13" bodyfile="unity/unity.c" bodystart="80" bodyend="106"/>
        <references refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" compoundref="d5/ddd/unity_8c" startline="275" endline="298">UnityPrintNumberHex</references>
        <referencedby refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrint</definition>
        <argsstring>(const char *string)</argsstring>
        <name>UnityPrint</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="130" column="6" bodyfile="unity/unity.c" bodystart="130" bodyend="150"/>
        <references refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" compoundref="d5/ddd/unity_8c" startline="80" endline="106">UnityPrintChar</references>
        <referencedby refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" compoundref="d5/ddd/unity_8c" startline="541" endline="562">UnityConcludeTest</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" compoundref="d5/ddd/unity_8c" startline="1811" endline="1822">UnityMessage</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" compoundref="d5/ddd/unity_8c" startline="336" endline="486">UnityPrintFloat</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintLen</definition>
        <argsstring>(const char *string, const UNITY_UINT32 length)</argsstring>
        <name>UnityPrintLen</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="152" column="6" bodyfile="unity/unity.c" bodystart="152" bodyend="187"/>
        <references refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" compoundref="d5/ddd/unity_8c" startline="275" endline="298">UnityPrintNumberHex</references>
        <referencedby refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberByStyle</definition>
        <argsstring>(const UNITY_INT number, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityPrintNumberByStyle</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="190" column="6" bodyfile="unity/unity.c" bodystart="190" bodyend="238"/>
        <references refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" compoundref="d5/ddd/unity_8c" startline="241" endline="252">UnityPrintNumber</references>
        <references refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" compoundref="d5/ddd/unity_8c" startline="275" endline="298">UnityPrintNumberHex</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumber</definition>
        <argsstring>(const UNITY_INT number_to_print)</argsstring>
        <name>UnityPrintNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>number_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="241" column="6" bodyfile="unity/unity.c" bodystart="241" bodyend="252"/>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <referencedby refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="d5/ddd/unity_8c" startline="1871" endline="1898">UnityEnd</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberUnsigned</definition>
        <argsstring>(const UNITY_UINT number)</argsstring>
        <name>UnityPrintNumberUnsigned</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="256" column="6" bodyfile="unity/unity.c" bodystart="256" bodyend="272"/>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" compoundref="d5/ddd/unity_8c" startline="241" endline="252">UnityPrintNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberHex</definition>
        <argsstring>(const UNITY_UINT number, const char nibbles_to_print)</argsstring>
        <name>UnityPrintNumberHex</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>nibbles_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="275" column="6" bodyfile="unity/unity.c" bodystart="275" bodyend="298"/>
        <referencedby refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" compoundref="d5/ddd/unity_8c" startline="80" endline="106">UnityPrintChar</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" compoundref="d5/ddd/unity_8c" startline="152" endline="187">UnityPrintLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintMask</definition>
        <argsstring>(const UNITY_UINT mask, const UNITY_UINT number)</argsstring>
        <name>UnityPrintMask</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="301" column="6" bodyfile="unity/unity.c" bodystart="301" bodyend="325"/>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintFloat</definition>
        <argsstring>(const UNITY_DOUBLE input_number)</argsstring>
        <name>UnityPrintFloat</name>
        <param>
          <type>const UNITY_DOUBLE</type>
          <declname>input_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="336" column="6" bodyfile="unity/unity.c" bodystart="336" bodyend="486"/>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityTestResultsBegin</definition>
        <argsstring>(const char *file, const UNITY_UINT line)</argsstring>
        <name>UnityTestResultsBegin</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="490" column="13" bodyfile="unity/unity.c" bodystart="490" bodyend="530"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" compoundref="d5/ddd/unity_8c" startline="241" endline="252">UnityPrintNumber</references>
        <referencedby refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" compoundref="d5/ddd/unity_8c" startline="541" endline="562">UnityConcludeTest</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" compoundref="d5/ddd/unity_8c" startline="1758" endline="1792">UnityFail</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" compoundref="d5/ddd/unity_8c" startline="1795" endline="1808">UnityIgnore</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" compoundref="d5/ddd/unity_8c" startline="1811" endline="1822">UnityMessage</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityTestResultsFailBegin</definition>
        <argsstring>(const UNITY_UINT line)</argsstring>
        <name>UnityTestResultsFailBegin</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="533" column="13" bodyfile="unity/unity.c" bodystart="533" bodyend="538"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="d5/ddd/unity_8c" startline="36">UnityStrFail</references>
        <references refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</references>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityConcludeTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityConcludeTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="541" column="6" bodyfile="unity/unity.c" bodystart="541" bodyend="562"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" compoundref="d5/ddd/unity_8c" startline="35">UnityStrPass</references>
        <references refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</references>
        <referencedby refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="d5/ddd/unity_8c" startline="1827" endline="1845">UnityDefaultTestRun</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityAddMsgIfSpecified</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>UnityAddMsgIfSpecified</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="565" column="13" bodyfile="unity/unity.c" bodystart="565" bodyend="589"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" compoundref="d5/ddd/unity_8c" startline="71">UnityStrDetail1Name</references>
        <references refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" compoundref="d5/ddd/unity_8c" startline="72">UnityStrDetail2Name</references>
        <references refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" compoundref="d5/ddd/unity_8c" startline="40">UnityStrSpacer</references>
        <referencedby refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" compoundref="d5/ddd/unity_8c" startline="686" endline="704">UnityAssertBits</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="d5/ddd/unity_8c" startline="707" endline="725">UnityAssertEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="d5/ddd/unity_8c" startline="972" endline="1033">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="d5/ddd/unity_8c" startline="728" endline="765">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="d5/ddd/unity_8c" startline="1178" endline="1222">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityPrintExpectedAndActualStrings</definition>
        <argsstring>(const char *expected, const char *actual)</argsstring>
        <name>UnityPrintExpectedAndActualStrings</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="592" column="13" bodyfile="unity/unity.c" bodystart="592" bodyend="616"/>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" compoundref="d5/ddd/unity_8c" startline="39">UnityStrNull</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <referencedby refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" compoundref="d5/ddd/unity_8c" startline="1345" endline="1381">UnityAssertEqualString</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityPrintExpectedAndActualStringsLen</definition>
        <argsstring>(const char *expected, const char *actual, const UNITY_UINT32 length)</argsstring>
        <name>UnityPrintExpectedAndActualStringsLen</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="619" column="13" bodyfile="unity/unity.c" bodystart="619" bodyend="645"/>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" compoundref="d5/ddd/unity_8c" startline="152" endline="187">UnityPrintLen</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" compoundref="d5/ddd/unity_8c" startline="39">UnityStrNull</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <referencedby refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="d5/ddd/unity_8c" startline="1384" endline="1421">UnityAssertEqualStringLen</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int UnityIsOneArrayNull</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT lineNumber, const char *msg)</argsstring>
        <name>UnityIsOneArrayNull</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="652" column="12" bodyfile="unity/unity.c" bodystart="652" bodyend="679"/>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a62e630267be1d3697cb3bb4198dd089a" compoundref="d5/ddd/unity_8c" startline="53">UnityStrNullPointerForActual</references>
        <references refid="d5/ddd/unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" compoundref="d5/ddd/unity_8c" startline="52">UnityStrNullPointerForExpected</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="d5/ddd/unity_8c" startline="775" endline="866">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="d5/ddd/unity_8c" startline="1503" endline="1564">UnityAssertEqualMemory</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" compoundref="d5/ddd/unity_8c" startline="1424" endline="1500">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" compoundref="d5/ddd/unity_8c" startline="1225" endline="1342">UnityAssertNumbersArrayWithin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertBits</definition>
        <argsstring>(const UNITY_INT mask, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertBits</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="686" column="6" bodyfile="unity/unity.c" bodystart="686" bodyend="704"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" compoundref="d5/ddd/unity_8c" startline="301" endline="325">UnityPrintMask</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualNumber</definition>
        <argsstring>(const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertEqualNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="707" column="6" bodyfile="unity/unity.c" bodystart="707" bodyend="725"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertGreaterOrLessOrEqualNumber</definition>
        <argsstring>(const UNITY_INT threshold, const UNITY_INT actual, const UNITY_COMPARISON_T compare, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertGreaterOrLessOrEqualNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_COMPARISON_T</type>
          <declname>compare</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="728" column="6" bodyfile="unity/unity.c" bodystart="728" bodyend="765"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" compoundref="d5/ddd/unity_8c" startline="43">UnityStrGt</references>
        <references refid="d5/ddd/unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" compoundref="d5/ddd/unity_8c" startline="44">UnityStrLt</references>
        <references refid="d5/ddd/unity_8c_1ae64ddfd97cd176f90700261b38b2779a" compoundref="d5/ddd/unity_8c" startline="46">UnityStrNotEqual</references>
        <references refid="d5/ddd/unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" compoundref="d5/ddd/unity_8c" startline="45">UnityStrOrEqual</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualIntArray</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualIntArray</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="775" column="6" bodyfile="unity/unity.c" bodystart="775" bodyend="866"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <references refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" compoundref="d5/ddd/unity_8c" startline="767" endline="772">UnityPrintPointlessAndBail</references>
        <references refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="d5/ddd/unity_8c" startline="47">UnityStrElement</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int UnityFloatsWithin</definition>
        <argsstring>(UNITY_FLOAT delta, UNITY_FLOAT expected, UNITY_FLOAT actual)</argsstring>
        <name>UnityFloatsWithin</name>
        <param>
          <type>UNITY_FLOAT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>UNITY_FLOAT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>UNITY_FLOAT</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="898" column="12" bodyfile="unity/unity.c" bodystart="898" bodyend="902"/>
        <references refid="d5/ddd/unity_8c_1a02810feed4a9aca0b2f997854b94a01c" compoundref="d5/ddd/unity_8c" startline="871" endline="877">UNITY_FLOAT_OR_DOUBLE_WITHIN</references>
        <referencedby refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="d5/ddd/unity_8c" startline="905" endline="950">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" compoundref="d5/ddd/unity_8c" startline="953" endline="969">UnityAssertFloatsWithin</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualFloatArray</definition>
        <argsstring>(const UNITY_FLOAT *expected, const UNITY_FLOAT *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualFloatArray</name>
        <param>
          <type>const UNITY_FLOAT *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="905" column="6" bodyfile="unity/unity.c" bodystart="905" bodyend="950"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" compoundref="d5/ddd/unity_8c" startline="886" endline="891">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" compoundref="d5/ddd/unity_8c" startline="898" endline="902">UnityFloatsWithin</references>
        <references refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <references refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" compoundref="d5/ddd/unity_8c" startline="767" endline="772">UnityPrintPointlessAndBail</references>
        <references refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="d5/ddd/unity_8c" startline="47">UnityStrElement</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatsWithin</definition>
        <argsstring>(const UNITY_FLOAT delta, const UNITY_FLOAT expected, const UNITY_FLOAT actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertFloatsWithin</name>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="953" column="6" bodyfile="unity/unity.c" bodystart="953" bodyend="969"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" compoundref="d5/ddd/unity_8c" startline="886" endline="891">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" compoundref="d5/ddd/unity_8c" startline="898" endline="902">UnityFloatsWithin</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatSpecial</definition>
        <argsstring>(const UNITY_FLOAT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLOAT_TRAIT_T style)</argsstring>
        <name>UnityAssertFloatSpecial</name>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT_TRAIT_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="972" column="6" bodyfile="unity/unity.c" bodystart="972" bodyend="1033"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" compoundref="d5/ddd/unity_8c" startline="336" endline="486">UnityPrintFloat</references>
        <references refid="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" compoundref="d5/ddd/unity_8c" startline="59">UnityStrDet</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" compoundref="d5/ddd/unity_8c" startline="56">UnityStrInf</references>
        <references refid="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" compoundref="d5/ddd/unity_8c" startline="60">UnityStrInvalidFloatTrait</references>
        <references refid="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" compoundref="d5/ddd/unity_8c" startline="58">UnityStrNaN</references>
        <references refid="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" compoundref="d5/ddd/unity_8c" startline="57">UnityStrNegInf</references>
        <references refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" compoundref="d5/ddd/unity_8c" startline="55">UnityStrNot</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertNumbersWithin</definition>
        <argsstring>(const UNITY_UINT delta, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertNumbersWithin</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1178" column="6" bodyfile="unity/unity.c" bodystart="1178" bodyend="1222"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" compoundref="d5/ddd/unity_8c" startline="50">UnityStrDelta</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertNumbersArrayWithin</definition>
        <argsstring>(const UNITY_UINT delta, const void *expected, const void *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertNumbersArrayWithin</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1225" column="6" bodyfile="unity/unity.c" bodystart="1225" bodyend="1342"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <references refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" compoundref="d5/ddd/unity_8c" startline="767" endline="772">UnityPrintPointlessAndBail</references>
        <references refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" compoundref="d5/ddd/unity_8c" startline="50">UnityStrDelta</references>
        <references refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="d5/ddd/unity_8c" startline="47">UnityStrElement</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualString</definition>
        <argsstring>(const char *expected, const char *actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertEqualString</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1345" column="6" bodyfile="unity/unity.c" bodystart="1345" bodyend="1381"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringLen</definition>
        <argsstring>(const char *expected, const char *actual, const UNITY_UINT32 length, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertEqualStringLen</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1384" column="6" bodyfile="unity/unity.c" bodystart="1384" bodyend="1421"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="d5/ddd/unity_8c" startline="619" endline="645">UnityPrintExpectedAndActualStringsLen</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringArray</definition>
        <argsstring>(const void *expected, const char **actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualStringArray</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1424" column="6" bodyfile="unity/unity.c" bodystart="1424" bodyend="1500"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="d5/ddd/unity_8c" startline="592" endline="616">UnityPrintExpectedAndActualStrings</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <references refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" compoundref="d5/ddd/unity_8c" startline="767" endline="772">UnityPrintPointlessAndBail</references>
        <references refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="d5/ddd/unity_8c" startline="47">UnityStrElement</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualMemory</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT32 length, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualMemory</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1503" column="6" bodyfile="unity/unity.c" bodystart="1503" bodyend="1564"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="d5/ddd/unity_8c" startline="565" endline="589">UnityAddMsgIfSpecified</references>
        <references refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="d5/ddd/unity_8c" startline="652" endline="679">UnityIsOneArrayNull</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="d5/ddd/unity_8c" startline="190" endline="238">UnityPrintNumberByStyle</references>
        <references refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" compoundref="d5/ddd/unity_8c" startline="256" endline="272">UnityPrintNumberUnsigned</references>
        <references refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" compoundref="d5/ddd/unity_8c" startline="767" endline="772">UnityPrintPointlessAndBail</references>
        <references refid="d5/ddd/unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" compoundref="d5/ddd/unity_8c" startline="48">UnityStrByte</references>
        <references refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="d5/ddd/unity_8c" startline="47">UnityStrElement</references>
        <references refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="d5/ddd/unity_8c" startline="41">UnityStrExpected</references>
        <references refid="d5/ddd/unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" compoundref="d5/ddd/unity_8c" startline="49">UnityStrMemory</references>
        <references refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="d5/ddd/unity_8c" startline="42">UnityStrWas</references>
        <references refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="d5/ddd/unity_8c" startline="533" endline="538">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1af2af69f480a8fd2e98b3cef667c3c61c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * UnityNumToPtr</definition>
        <argsstring>(const UNITY_INT num, const UNITY_UINT8 size)</argsstring>
        <name>UnityNumToPtr</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>num</declname>
        </param>
        <param>
          <type>const UNITY_UINT8</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1584" column="13" bodyfile="unity/unity.c" bodystart="1584" bodyend="1606"/>
        <references refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66">UnityQuickCompare</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a4226621ea2a6ee64b626dece4f566614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * UnityFloatToPtr</definition>
        <argsstring>(const float num)</argsstring>
        <name>UnityFloatToPtr</name>
        <param>
          <type>const float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1610" column="13" bodyfile="unity/unity.c" bodystart="1610" bodyend="1614"/>
        <references refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66">UnityQuickCompare</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityFail</definition>
        <argsstring>(const char *msg, const UNITY_UINT line)</argsstring>
        <name>UnityFail</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1758" column="6" bodyfile="unity/unity.c" bodystart="1758" bodyend="1792"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" compoundref="d5/ddd/unity_8c" startline="22">UNITY_FAIL_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" compoundref="d5/ddd/unity_8c" startline="71">UnityStrDetail1Name</references>
        <references refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" compoundref="d5/ddd/unity_8c" startline="72">UnityStrDetail2Name</references>
        <references refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="d5/ddd/unity_8c" startline="36">UnityStrFail</references>
        <references refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" compoundref="d5/ddd/unity_8c" startline="40">UnityStrSpacer</references>
        <references refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityIgnore</definition>
        <argsstring>(const char *msg, const UNITY_UINT line)</argsstring>
        <name>UnityIgnore</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1795" column="6" bodyfile="unity/unity.c" bodystart="1795" bodyend="1808"/>
        <references refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" compoundref="d5/ddd/unity_8c" startline="24">RETURN_IF_FAIL_OR_IGNORE</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1a8e7615065c9272a62eede0f1e725a774" compoundref="d5/ddd/unity_8c" startline="23">UNITY_IGNORE_AND_BAIL</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" compoundref="d5/ddd/unity_8c" startline="37">UnityStrIgnore</references>
        <references refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityMessage</definition>
        <argsstring>(const char *msg, const UNITY_UINT line)</argsstring>
        <name>UnityMessage</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1811" column="6" bodyfile="unity/unity.c" bodystart="1811" bodyend="1822"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="d5/ddd/unity_8c" startline="490" endline="530">UnityTestResultsBegin</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityDefaultTestRun</definition>
        <argsstring>(UnityTestFunction Func, const char *FuncName, const int FuncLineNum)</argsstring>
        <name>UnityDefaultTestRun</name>
        <param>
          <type>UnityTestFunction</type>
          <declname>Func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>FuncName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>FuncLineNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1827" column="6" bodyfile="unity/unity.c" bodystart="1827" bodyend="1845"/>
        <references refid="d9/d79/test__libft_8c_1a95c834d6178047ce9e1bce7cbfea2836" compoundref="d9/d79/test__libft_8c" startline="12" endline="12">setUp</references>
        <references refid="d9/d79/test__libft_8c_1a9909011e5fea0c018842eec4d93d0662" compoundref="d9/d79/test__libft_8c" startline="13" endline="13">tearDown</references>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" compoundref="d5/ddd/unity_8c" startline="541" endline="562">UnityConcludeTest</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1afefd1b90b9854b428fef009e12489282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnitySetTestFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>UnitySetTestFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1849" column="6" bodyfile="unity/unity.c" bodystart="1849" bodyend="1852"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityBegin</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>UnityBegin</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1855" column="6" bodyfile="unity/unity.c" bodystart="1855" bodyend="1868"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
      </memberdef>
      <memberdef kind="function" id="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnityEnd</definition>
        <argsstring>(void)</argsstring>
        <name>UnityEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="unity/unity.c" line="1871" column="5" bodyfile="unity/unity.c" bodystart="1871" bodyend="1898"/>
        <references refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" compoundref="d5/ddd/unity_8c" startline="26">Unity</references>
        <references refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="d5/ddd/unity_8c" startline="130" endline="150">UnityPrint</references>
        <references refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" compoundref="d5/ddd/unity_8c" startline="241" endline="252">UnityPrintNumber</references>
        <references refid="d5/ddd/unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" compoundref="d5/ddd/unity_8c" startline="66">UnityStrBreaker</references>
        <references refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="d5/ddd/unity_8c" startline="36">UnityStrFail</references>
        <references refid="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" compoundref="d5/ddd/unity_8c" startline="34">UnityStrOk</references>
        <references refid="d5/ddd/unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" compoundref="d5/ddd/unity_8c" startline="68">UnityStrResultsFailures</references>
        <references refid="d5/ddd/unity_8c_1ab866d9dfd564414877c69e753e7e382e" compoundref="d5/ddd/unity_8c" startline="69">UnityStrResultsIgnored</references>
        <references refid="d5/ddd/unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" compoundref="d5/ddd/unity_8c" startline="67">UnityStrResultsTests</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Unity<sp/>Project<sp/>-<sp/>A<sp/>Test<sp/>Framework<sp/>for<sp/>C</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-21<sp/>Mike<sp/>Karlesky,<sp/>Mark<sp/>VanderVoord,<sp/>Greg<sp/>Williams</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>[Released<sp/>under<sp/>MIT<sp/>License.<sp/>Please<sp/>refer<sp/>to<sp/>license.txt<sp/>for<sp/>details]</highlight></codeline>
<codeline lineno="5"><highlight class="comment">============================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;unity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AVR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROGMEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>omitted<sp/>from<sp/>header,<sp/>declare<sp/>overrideable<sp/>prototypes<sp/>here<sp/>so<sp/>they&apos;re<sp/>ready<sp/>for<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OMIT_OUTPUT_CHAR_HEADER_DECLARATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helpful<sp/>macros<sp/>for<sp/>us<sp/>to<sp/>use<sp/>here<sp/>in<sp/>Assert<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FAIL_AND_BAIL<sp/><sp/><sp/>{<sp/>Unity.CurrentTestFailed<sp/><sp/>=<sp/>1;<sp/>UNITY_OUTPUT_FLUSH();<sp/>TEST_ABORT();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="d5/ddd/unity_8c_1a8e7615065c9272a62eede0f1e725a774" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_IGNORE_AND_BAIL<sp/>{<sp/>Unity.CurrentTestIgnored<sp/>=<sp/>1;<sp/>UNITY_OUTPUT_FLUSH();<sp/>TEST_ABORT();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_IF_FAIL_OR_IGNORE<sp/>if<sp/>(Unity.CurrentTestFailed<sp/>||<sp/>Unity.CurrentTestIgnored)<sp/>TEST_ABORT()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UNITY_STORAGE_T<sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[42mOK\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[42mPASS\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[41mFAIL\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[43mIGNORE\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35" refid="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PASS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36" refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IGNORE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40" refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Expected<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42" refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Was<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43" refid="d5/ddd/unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" kindref="member">UnityStrGt</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>greater<sp/>than<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44" refid="d5/ddd/unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" kindref="member">UnityStrLt</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45" refid="d5/ddd/unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" kindref="member">UnityStrOrEqual</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;or<sp/>equal<sp/>to<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="d5/ddd/unity_8c_1ae64ddfd97cd176f90700261b38b2779a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ae64ddfd97cd176f90700261b38b2779a" kindref="member">UnityStrNotEqual</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>not<sp/>equal<sp/>to<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47" refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Element<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48" refid="d5/ddd/unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" kindref="member">UnityStrByte</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Byte<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49" refid="d5/ddd/unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" kindref="member">UnityStrMemory</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Memory<sp/>Mismatch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50" refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" kindref="member">UnityStrDelta</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Values<sp/>Not<sp/>Within<sp/>Delta<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="d5/ddd/unity_8c_1a3512e59b7ef2269347af3afa0671ba84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a3512e59b7ef2269347af3afa0671ba84" kindref="member">UnityStrPointless</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>You<sp/>Asked<sp/>Me<sp/>To<sp/>Compare<sp/>Nothing,<sp/>Which<sp/>Was<sp/>Pointless.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52" refid="d5/ddd/unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" kindref="member">UnityStrNullPointerForExpected</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Expected<sp/>pointer<sp/>to<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53" refid="d5/ddd/unity_8c_1a62e630267be1d3697cb3bb4198dd089a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a62e630267be1d3697cb3bb4198dd089a" kindref="member">UnityStrNullPointerForActual</ref>[]<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Actual<sp/>pointer<sp/>was<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56" refid="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Infinity&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Negative<sp/>Infinity&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58" refid="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NaN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Determinate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60" refid="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Float<sp/>Trait&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="d5/ddd/unity_8c_1a1e2d7034b98b9532ec094f55b909e99b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a1e2d7034b98b9532ec094f55b909e99b" kindref="member">UnityStrErrShorthand</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>Shorthand<sp/>Support<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63" refid="d5/ddd/unity_8c_1ab644636442c612d56dfadc6970d2af67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ab644636442c612d56dfadc6970d2af67" kindref="member">UnityStrErrFloat</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>Floating<sp/>Point<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64" refid="d5/ddd/unity_8c_1ac8d03220554dfa13081f6a057ced349e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ac8d03220554dfa13081f6a057ced349e" kindref="member">UnityStrErrDouble</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>Double<sp/>Precision<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65" refid="d5/ddd/unity_8c_1af5c213ecde93420aed908a92a5b32c66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1af5c213ecde93420aed908a92a5b32c66" kindref="member">UnityStrErr64</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>64-bit<sp/>Support<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66" refid="d5/ddd/unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" kindref="member">UnityStrBreaker</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-----------------------&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67" refid="d5/ddd/unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" kindref="member">UnityStrResultsTests</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Tests<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68" refid="d5/ddd/unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" kindref="member">UnityStrResultsFailures</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Failures<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69" refid="d5/ddd/unity_8c_1ab866d9dfd564414877c69e753e7e382e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ab866d9dfd564414877c69e753e7e382e" kindref="member">UnityStrResultsIgnored</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Ignored<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>UNITY_DETAIL1_NAME<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72" refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref><sp/><ref refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>UNITY_DETAIL2_NAME<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Pretty<sp/>Printers<sp/>&amp;<sp/>Test<sp/>Result<sp/>Output<sp/>Handlers</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>helper<sp/>function<sp/>to<sp/>print<sp/>characters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printable<sp/>characters<sp/>plus<sp/>CR<sp/>&amp;<sp/>LF<sp/>are<sp/>printed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>&lt;=<sp/>126)<sp/>&amp;&amp;<sp/>(*pch<sp/>&gt;=<sp/>32))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(*pch);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>carriage<sp/>returns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>line<sp/>feeds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>10)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unprintable<sp/>characters<sp/>are<sp/>shown<sp/>as<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((UNITY_UINT)*pch,<sp/>2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>helper<sp/>function<sp/>to<sp/>print<sp/>ANSI<sp/>escape<sp/>strings<sp/>e.g.<sp/>&quot;\033[42m&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>UnityPrintAnsiEscapeString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch<sp/>&amp;&amp;<sp/>(*pch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(*pch);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>ANSI<sp/>escape<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>==<sp/>27)<sp/>&amp;&amp;<sp/>(*(pch<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>+=<sp/>UnityPrintAnsiEscapeString(pch);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>(pch);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch<sp/>&amp;&amp;<sp/>((UNITY_UINT32)(pch<sp/>-<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>&lt;<sp/>length))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printable<sp/>characters<sp/>plus<sp/>CR<sp/>&amp;<sp/>LF<sp/>are<sp/>printed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>&lt;=<sp/>126)<sp/>&amp;&amp;<sp/>(*pch<sp/>&gt;=<sp/>32))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(*pch);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>carriage<sp/>returns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>line<sp/>feeds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>10)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unprintable<sp/>characters<sp/>are<sp/>shown<sp/>as<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((UNITY_UINT)*pch,<sp/>2);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_INT)<sp/>==<sp/>UNITY_DISPLAY_RANGE_INT)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printable<sp/>characters<sp/>plus<sp/>CR<sp/>&amp;<sp/>LF<sp/>are<sp/>printed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((number<sp/>&lt;=<sp/>126)<sp/>&amp;&amp;<sp/>(number<sp/>&gt;=<sp/>32))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)number);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>carriage<sp/>returns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>line<sp/>feeds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>==<sp/>10)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unprintable<sp/>characters<sp/>are<sp/>shown<sp/>as<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((UNITY_UINT)number,<sp/>2);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>(number);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_UINT)<sp/>==<sp/>UNITY_DISPLAY_RANGE_UINT)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>((UNITY_UINT)number);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((UNITY_UINT)number,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)((style<sp/>&amp;<sp/>0xF)<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>number_to_print)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>number<sp/>=<sp/>(UNITY_UINT)number_to_print;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number_to_print<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>negative<sp/>number,<sp/>including<sp/>MIN<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>=<sp/>(~number)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(number);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>basically<sp/>do<sp/>an<sp/>itoa<sp/>using<sp/>as<sp/>little<sp/>ram<sp/>as<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>divisor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>initial<sp/>divisor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>/<sp/>divisor<sp/>&gt;<sp/>9)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divisor<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>mod<sp/>and<sp/>print,<sp/>then<sp/>divide<sp/>divisor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(number<sp/>/<sp/>divisor<sp/>%<sp/>10)));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divisor<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(divisor<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nibbles_to_print)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nibble;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nibbles<sp/>=<sp/>nibbles_to_print;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)nibbles<sp/>&gt;<sp/>UNITY_MAX_NIBBLES)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibbles<sp/>=<sp/>UNITY_MAX_NIBBLES;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nibbles<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibbles--;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibble<sp/>=<sp/>(int)(number<sp/>&gt;&gt;<sp/>(nibbles<sp/>*<sp/>4))<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nibble<sp/>&lt;=<sp/>9)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>nibble));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10<sp/>+<sp/>nibble));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>current_bit<sp/>=<sp/>(UNITY_UINT)1<sp/>&lt;&lt;<sp/>(UNITY_INT_WIDTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT32<sp/>i;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>UNITY_INT_WIDTH;<sp/>i++)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_bit<sp/>&amp;<sp/>mask)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_bit<sp/>&amp;<sp/>number)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_bit<sp/>=<sp/>current_bit<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>prints<sp/>a<sp/>floating-point<sp/>value<sp/>in<sp/>a<sp/>format<sp/>similar<sp/>to</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>printf(&quot;%.7g&quot;)<sp/>on<sp/>a<sp/>single-precision<sp/>machine<sp/>or<sp/>printf(&quot;%.9g&quot;)<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>double-precision<sp/>machine.<sp/><sp/>The<sp/>7th<sp/>digit<sp/>won&apos;t<sp/>always<sp/>be<sp/>totally<sp/>correct</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>in<sp/>single-precision<sp/>operation<sp/>(for<sp/>that<sp/>level<sp/>of<sp/>accuracy,<sp/>a<sp/>more</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>complicated<sp/>algorithm<sp/>would<sp/>be<sp/>needed).</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>input_number)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_digits<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32<sp/>min_scaled<sp/>=<sp/>100000000;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32<sp/>max_scaled<sp/>=<sp/>1000000000;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_digits<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32<sp/>min_scaled<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32<sp/>max_scaled<sp/>=<sp/>10000000;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DOUBLE<sp/>number<sp/>=<sp/>input_number;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>minus<sp/>sign<sp/>(does<sp/>not<sp/>handle<sp/>negative<sp/>zero)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>=<sp/>-number;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>zero,<sp/>NaN,<sp/>and<sp/>+/-<sp/>infinity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnan(number))</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isinf(number))</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;inf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT32<sp/>n_int<sp/>=<sp/>0,<sp/>n;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exponent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals,<sp/>digits;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Scale<sp/>up<sp/>or<sp/>down<sp/>by<sp/>powers<sp/>of<sp/>10.<sp/><sp/>To<sp/>minimize<sp/>rounding<sp/>error,</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>start<sp/>with<sp/>a<sp/>factor/divisor<sp/>of<sp/>10^10,<sp/>which<sp/>is<sp/>the<sp/>largest</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>power<sp/>of<sp/>10<sp/>that<sp/>can<sp/>be<sp/>represented<sp/>exactly.<sp/><sp/>Finally,<sp/>compute</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(exactly)<sp/>the<sp/>remaining<sp/>power<sp/>of<sp/>10<sp/>and<sp/>perform<sp/>one<sp/>more</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>multiplication<sp/>or<sp/>division.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_DOUBLE<sp/>factor<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>(UNITY_DOUBLE)max_scaled<sp/>/<sp/>1e10f)<sp/><sp/>{<sp/>number<sp/>*=<sp/>1e10f;<sp/>exponent<sp/>-=<sp/>10;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>*<sp/>factor<sp/>&lt;<sp/>(UNITY_DOUBLE)min_scaled)<sp/>{<sp/>factor<sp/>*=<sp/>10.0f;<sp/>exponent--;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>*=<sp/>factor;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&gt;<sp/>(UNITY_DOUBLE)max_scaled)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_DOUBLE<sp/>divisor<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&gt;<sp/>(UNITY_DOUBLE)min_scaled<sp/>*<sp/>1e10f)<sp/><sp/><sp/>{<sp/>number<sp/><sp/>/=<sp/>1e10f;<sp/>exponent<sp/>+=<sp/>10;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>/<sp/>divisor<sp/>&gt;<sp/>(UNITY_DOUBLE)max_scaled)<sp/>{<sp/>divisor<sp/>*=<sp/>10.0f;<sp/>exponent++;<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>/=<sp/>divisor;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>this<sp/>range,<sp/>we<sp/>can<sp/>split<sp/>off<sp/>the<sp/>integer<sp/>part<sp/>before</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>doing<sp/>any<sp/>multiplications.<sp/><sp/>This<sp/>reduces<sp/>rounding<sp/>error<sp/>by</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>freeing<sp/>up<sp/>significant<sp/>bits<sp/>in<sp/>the<sp/>fractional<sp/>part.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_DOUBLE<sp/>factor<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_int<sp/>=<sp/>(UNITY_INT32)number;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>-=<sp/>(UNITY_DOUBLE)n_int;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n_int<sp/>&lt;<sp/>min_scaled)<sp/>{<sp/>n_int<sp/>*=<sp/>10;<sp/>factor<sp/>*=<sp/>10.0f;<sp/>exponent--;<sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>*=<sp/>factor;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>to<sp/>nearest<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>((UNITY_INT32)(number<sp/>+<sp/>number)<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_ROUND_TIES_AWAY_FROM_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>to<sp/>even<sp/>if<sp/>exactly<sp/>between<sp/>two<sp/>integers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>&amp;<sp/>1)<sp/>&amp;&amp;<sp/>(((UNITY_DOUBLE)n<sp/>-<sp/>number)<sp/>==<sp/>0.5f))</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n--;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>n_int;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>max_scaled)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>min_scaled;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent++;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>where<sp/>to<sp/>place<sp/>decimal<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimals<sp/>=<sp/>((exponent<sp/>&lt;=<sp/>0)<sp/>&amp;&amp;<sp/>(exponent<sp/>&gt;=<sp/>-(sig_digits<sp/>+<sp/>3)))<sp/>?<sp/>(-exponent)<sp/>:<sp/>(sig_digits<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>+=<sp/>decimals;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>truncate<sp/>trailing<sp/>zeroes<sp/>after<sp/>decimal<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((decimals<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>((n<sp/>%<sp/>10)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimals--;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>up<sp/>buffer<sp/>in<sp/>reverse<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>!=<sp/>0)<sp/>||<sp/>(digits<sp/>&lt;<sp/>(decimals<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[digits++]<sp/>=<sp/>(char)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>n<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(digits<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digits<sp/>==<sp/>decimals)<sp/>{<sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(buf[--digits]);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>exponent<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exponent<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exponent<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>=<sp/>-exponent;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((exponent<sp/>!=<sp/>0)<sp/>||<sp/>(digits<sp/>&lt;<sp/>2))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[digits++]<sp/>=<sp/>(char)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>exponent<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(digits<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(buf[--digits]);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>UNITY_EXCLUDE_FLOAT_PRINT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_FOR_ECLIPSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(file);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)line);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_FOR_IAR_WORKBENCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;&lt;SRCREF<sp/>line=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)line);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>file=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(file);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/SRCREF&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_FOR_QT_CREATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;file://&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(file);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)line);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(file);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)line);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>line);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" kindref="member">UnityConcludeTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestIgnored)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestIgnores++;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestLineNumber);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFailures++;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestIgnored<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EXEC_TIME();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLUSH_CALL();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_PRINT_TEST_CONTEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_TEST_CONTEXT();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail1)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail1);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail2)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail2);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(expected);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(actual);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" kindref="member">UnityPrintExpectedAndActualStringsLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(expected,<sp/>length);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(actual,<sp/>length);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/>Assertion<sp/>&amp;<sp/>Control<sp/>Helpers</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>and<sp/>return<sp/>true<sp/>if<sp/>just<sp/>expected<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" kindref="member">UnityStrNullPointerForExpected</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>and<sp/>return<sp/>true<sp/>if<sp/>just<sp/>actual<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a62e630267be1d3697cb3bb4198dd089a" kindref="member">UnityStrNullPointerForActual</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>false<sp/>if<sp/>neither<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/>Assertion<sp/>Functions</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a711623f2c929b3f12dddd5261382309d" kindref="member">UnityAssertBits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>mask,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/>expected)<sp/>!=<sp/>(mask<sp/>&amp;<sp/>actual))</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>((UNITY_UINT)mask,<sp/>(UNITY_UINT)expected);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>((UNITY_UINT)mask,<sp/>(UNITY_UINT)actual);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" kindref="member">UnityAssertEqualNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expected,<sp/>style);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" kindref="member">UnityAssertGreaterOrLessOrEqualNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>threshold,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_COMPARISON_T<sp/>compare,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((threshold<sp/>==<sp/>actual)<sp/>&amp;&amp;<sp/>(compare<sp/>&amp;<sp/>UNITY_EQUAL_TO))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((threshold<sp/>==<sp/>actual))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>failed<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_INT)<sp/>==<sp/>UNITY_DISPLAY_RANGE_INT)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((actual<sp/>&gt;<sp/>threshold)<sp/>&amp;&amp;<sp/>(compare<sp/>&amp;<sp/>UNITY_SMALLER_THAN))<sp/>{<sp/>failed<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((actual<sp/>&lt;<sp/>threshold)<sp/>&amp;&amp;<sp/>(compare<sp/>&amp;<sp/>UNITY_GREATER_THAN))<sp/>{<sp/>failed<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>UINT<sp/>or<sp/>HEX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((UNITY_UINT)actual<sp/>&gt;<sp/>(UNITY_UINT)threshold)<sp/>&amp;&amp;<sp/>(compare<sp/>&amp;<sp/>UNITY_SMALLER_THAN))<sp/>{<sp/>failed<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((UNITY_UINT)actual<sp/>&lt;<sp/>(UNITY_UINT)threshold)<sp/>&amp;&amp;<sp/>(compare<sp/>&amp;<sp/>UNITY_GREATER_THAN))<sp/>{<sp/>failed<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/>UNITY_GREATER_THAN)<sp/>{<sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" kindref="member">UnityStrGt</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/>UNITY_SMALLER_THAN)<sp/>{<sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" kindref="member">UnityStrLt</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/>UNITY_EQUAL_TO)<sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" kindref="member">UnityStrOrEqual</ref>);<sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>UNITY_NOT_EQUAL)<sp/><sp/><sp/>{<sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ae64ddfd97cd176f90700261b38b2779a" kindref="member">UnityStrNotEqual</ref>);<sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(threshold,<sp/>style);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UnityPrintPointlessAndBail()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityTestResultsFailBegin(lineNumber);<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrPointless);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityAddMsgIfSpecified(msg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UNITY_FAIL_AND_BAIL;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" kindref="member">UnityAssertEqualIntArray</ref>(UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>elements<sp/><sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/><sp/><sp/><sp/>=<sp/>style<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(expected,<sp/>actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((elements<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(elements--))</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>expect_val;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>actual_val;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(length)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT8*)expected;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT8*)actual;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT8);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT16*)expected;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT16*)actual;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT16);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)expected;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)actual;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT64);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>is<sp/>length<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32*)expected;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32*)actual;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT32);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expect_val<sp/>!=<sp/>actual_val)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_UINT)<sp/>&amp;&amp;<sp/>(length<sp/>&lt;<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)))</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>UINT,<sp/>remove<sp/>sign<sp/>extension<sp/>(padding<sp/>1&apos;s)<sp/>from<sp/>signed<sp/>type<sp/>casts<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&lt;&lt;<sp/>8<sp/>*<sp/>length)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expect_val,<sp/>style);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual_val,<sp/>style);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>through<sp/>array<sp/>by<sp/>incrementing<sp/>the<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/>(UNITY_INTERNAL_PTR)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected<sp/>+<sp/>increment);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>=<sp/>(UNITY_INTERNAL_PTR)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)actual<sp/>+<sp/>increment);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Wrap<sp/>this<sp/>define<sp/>in<sp/>a<sp/>function<sp/>with<sp/>variable<sp/>types<sp/>as<sp/>float<sp/>or<sp/>double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="d5/ddd/unity_8c_1a02810feed4a9aca0b2f997854b94a01c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLOAT_OR_DOUBLE_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>diff)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="872"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(isinf(expected)<sp/>&amp;&amp;<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>(((expected)<sp/>&lt;<sp/>0)<sp/>==<sp/>((actual)<sp/>&lt;<sp/>0)))<sp/>return<sp/>1;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="873"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(UNITY_NAN_CHECK)<sp/>return<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="874"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(diff)<sp/>=<sp/>(actual)<sp/>-<sp/>(expected);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="875"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((diff)<sp/>&lt;<sp/>0)<sp/>(diff)<sp/>=<sp/>-(diff);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="876"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((delta)<sp/>&lt;<sp/>0)<sp/>(delta)<sp/>=<sp/>-(delta);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="877"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>!(isnan(diff)<sp/>||<sp/>isinf(diff)<sp/>||<sp/>((diff)<sp/>&gt;<sp/>(delta)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>first<sp/>part<sp/>of<sp/>this<sp/>condition<sp/>will<sp/>catch<sp/>any<sp/>NaN<sp/>or<sp/>Infinite<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_NAN_NOT_EQUAL_NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="d5/ddd/unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_NAN_CHECK<sp/>isnan(expected)<sp/>&amp;&amp;<sp/>isnan(actual)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_NAN_CHECK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(expected,<sp/>actual)<sp/>\</highlight></codeline>
<codeline lineno="887"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="888"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrExpected);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrintFloat(expected);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrWas);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrintFloat(actual);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(expected,<sp/>actual)<sp/>\</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrDelta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UNITY_EXCLUDE_FLOAT_PRINT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(UNITY_FLOAT<sp/>delta,<sp/>UNITY_FLOAT<sp/>expected,<sp/>UNITY_FLOAT<sp/>actual)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT<sp/>diff;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a02810feed4a9aca0b2f997854b94a01c" kindref="member">UNITY_FLOAT_OR_DOUBLE_WITHIN</ref>(delta,<sp/>expected,<sp/>actual,<sp/>diff);</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" kindref="member">UnityAssertEqualFloatArray</ref>(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>expected,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>actual,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>ptr_expected<sp/>=<sp/>expected;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>ptr_actual<sp/>=<sp/>actual;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((UNITY_INTERNAL_PTR)expected,<sp/>(UNITY_INTERNAL_PTR)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(*ptr_expected<sp/>*<sp/>UNITY_FLOAT_PRECISION,<sp/>*ptr_expected,<sp/>*ptr_actual))</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>((UNITY_DOUBLE)*ptr_expected,<sp/>(UNITY_DOUBLE)*ptr_actual);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_expected++;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_actual++;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a14adc0e30747c0823cbea7ebef92f114" kindref="member">UnityAssertFloatsWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>delta,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>expected,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>actual,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber)</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/ddd/unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(delta,<sp/>expected,<sp/>actual))</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>((UNITY_DOUBLE)expected,<sp/>(UNITY_DOUBLE)actual);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972" refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" kindref="member">UnityAssertFloatSpecial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>actual,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TRAIT_T<sp/>style)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trait_names[]<sp/>=<sp/>{<ref refid="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>};</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>should_be_trait<sp/>=<sp/>((UNITY_INT)style<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>is_trait<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!should_be_trait;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>trait_index<sp/><sp/><sp/><sp/><sp/>=<sp/>(UNITY_INT)(style<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(style)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_INF:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_INF:</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NEG_INF:</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_NEG_INF:</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NAN:</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_NAN:</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isnan(actual)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_DET:<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>determinate<sp/>number<sp/>is<sp/>non<sp/>infinite<sp/>and<sp/>not<sp/>NaN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_DET:</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>!isinf(actual)<sp/>&amp;&amp;<sp/>!isnan(actual);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>including<sp/>UNITY_FLOAT_INVALID_TRAIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_names[0]<sp/>=<sp/><ref refid="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_trait<sp/>!=<sp/>should_be_trait)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!should_be_trait)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>((UNITY_DOUBLE)actual);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_be_trait)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>UNITY_EXCLUDE_FLOAT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityDoublesWithin(UNITY_DOUBLE<sp/>delta,<sp/>UNITY_DOUBLE<sp/>expected,<sp/>UNITY_DOUBLE<sp/>actual)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DOUBLE<sp/>diff;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a02810feed4a9aca0b2f997854b94a01c" kindref="member">UNITY_FLOAT_OR_DOUBLE_WITHIN</ref>(delta,<sp/>expected,<sp/>actual,<sp/>diff);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualDoubleArray(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>expected,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>actual,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>ptr_expected<sp/>=<sp/>expected;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>ptr_actual<sp/>=<sp/>actual;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((UNITY_INTERNAL_PTR)expected,<sp/>(UNITY_INTERNAL_PTR)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!UnityDoublesWithin(*ptr_expected<sp/>*<sp/>UNITY_DOUBLE_PRECISION,<sp/>*ptr_expected,<sp/>*ptr_actual))</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>(*ptr_expected,<sp/>*ptr_actual);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_expected++;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_actual++;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertDoublesWithin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>delta,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>expected,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>actual,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!UnityDoublesWithin(delta,<sp/>expected,<sp/>actual))</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>(expected,<sp/>actual);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertDoubleSpecial(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>actual,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TRAIT_T<sp/>style)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trait_names[]<sp/>=<sp/>{<ref refid="d5/ddd/unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>,<sp/><ref refid="d5/ddd/unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>};</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>should_be_trait<sp/>=<sp/>((UNITY_INT)style<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>is_trait<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!should_be_trait;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT<sp/>trait_index<sp/><sp/><sp/><sp/><sp/>=<sp/>(UNITY_INT)(style<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(style)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_INF:</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_INF:</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NEG_INF:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_NEG_INF:</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NAN:</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_NAN:</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>isnan(actual)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_DET:<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>determinate<sp/>number<sp/>is<sp/>non<sp/>infinite<sp/>and<sp/>not<sp/>NaN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNITY_FLOAT_IS_NOT_DET:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>!isinf(actual)<sp/>&amp;&amp;<sp/>!isnan(actual);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>including<sp/>UNITY_FLOAT_INVALID_TRAIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_names[0]<sp/>=<sp/><ref refid="d5/ddd/unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_trait<sp/>!=<sp/>should_be_trait)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!should_be_trait)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(actual);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_be_trait)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>UNITY_EXCLUDE_DOUBLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178" refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" kindref="member">UnityAssertNumbersWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>delta,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_INT)<sp/>==<sp/>UNITY_DISPLAY_RANGE_INT)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>&gt;<sp/>expected)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)actual<sp/>-<sp/>(UNITY_UINT)expected)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)expected<sp/>-<sp/>(UNITY_UINT)actual)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((UNITY_UINT)actual<sp/>&gt;<sp/>(UNITY_UINT)expected)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)actual<sp/>-<sp/>(UNITY_UINT)expected)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)expected<sp/>-<sp/>(UNITY_UINT)actual)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" kindref="member">UnityStrDelta</ref>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>((UNITY_INT)delta,<sp/>style);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expected,<sp/>style);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a83fe3176694668c9ab4904410d1cb27f" kindref="member">UnityAssertNumbersArrayWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>delta,</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/><sp/><sp/>=<sp/>style<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(expected,<sp/>actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((elements<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(elements--))</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>expect_val;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>actual_val;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(length)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT8*)expected;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT8*)actual;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT8);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT16*)expected;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT16*)actual;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT16);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)expected;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)actual;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT64);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>is<sp/>length<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32*)expected;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT32*)actual;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UNITY_INT32);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_INT)<sp/>==<sp/>UNITY_DISPLAY_RANGE_INT)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_val<sp/>&gt;<sp/>expect_val)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)actual_val<sp/>-<sp/>(UNITY_UINT)expect_val)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)expect_val<sp/>-<sp/>(UNITY_UINT)actual_val)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((UNITY_UINT)actual_val<sp/>&gt;<sp/>(UNITY_UINT)expect_val)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)actual_val<sp/>-<sp/>(UNITY_UINT)expect_val)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>(((UNITY_UINT)expect_val<sp/>-<sp/>(UNITY_UINT)actual_val)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/>UNITY_DISPLAY_RANGE_UINT)<sp/>&amp;&amp;<sp/>(length<sp/>&lt;<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>UINT,<sp/>remove<sp/>sign<sp/>extension<sp/>(padding<sp/>1&apos;s)<sp/>from<sp/>signed<sp/>type<sp/>casts<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT<sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&lt;&lt;<sp/>8<sp/>*<sp/>length)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" kindref="member">UnityStrDelta</ref>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>((UNITY_INT)delta,<sp/>style);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expect_val,<sp/>style);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual_val,<sp/>style);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>through<sp/>array<sp/>by<sp/>incrementing<sp/>the<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/>(UNITY_INTERNAL_PTR)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected<sp/>+<sp/>increment);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>=<sp/>(UNITY_INTERNAL_PTR)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)actual<sp/>+<sp/>increment);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345" refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1ac2901e8d0e2c26074462d616736e808f" kindref="member">UnityAssertEqualString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>i;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>&amp;&amp;<sp/>actual)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>expected[i]<sp/>||<sp/>actual[i];<sp/>i++)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected[i]<sp/>!=<sp/>actual[i])</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(expected,<sp/>actual);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384" refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" kindref="member">UnityAssertEqualStringLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>i;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>&amp;&amp;<sp/>actual)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>(i<sp/>&lt;<sp/>length)<sp/>&amp;&amp;<sp/>(expected[i]<sp/>||<sp/>actual[i]);<sp/>i++)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected[i]<sp/>!=<sp/>actual[i])</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aee1c0284290f43293c296a979dc1b901" kindref="member">UnityPrintExpectedAndActualStringsLen</ref>(expected,<sp/>actual,<sp/>length);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424" refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a2255be5a89ed1551deedd6732e917915" kindref="member">UnityAssertEqualStringArray</ref>(UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>actual,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>act<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>elements,<sp/>it&apos;s<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)expected<sp/>==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)actual)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((UNITY_INTERNAL_PTR)expected,<sp/>(UNITY_INTERNAL_PTR)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>!=<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expd<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act<sp/>=<sp/>actual[j];</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_ARRAY)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expd<sp/>=<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)expected)[j];</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd<sp/>&amp;&amp;<sp/>act)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>expd[i]<sp/>||<sp/>act[i];<sp/>i++)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd[i]<sp/>!=<sp/>act[i])</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd<sp/>!=<sp/>act)</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(j);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(expd,<sp/>act);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++j<sp/>&lt;<sp/>num_elements);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" kindref="member">UnityAssertEqualMemory</ref>(UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr_exp<sp/>=<sp/>(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr_act<sp/>=<sp/>(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)actual;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32<sp/>bytes;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((elements<sp/>==<sp/>0)<sp/>||<sp/>(length<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(expected,<sp/>actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bytes--)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr_exp<sp/>!=<sp/>*ptr_act)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" kindref="member">UnityStrMemory</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" kindref="member">UnityStrByte</ref>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(length<sp/>-<sp/>bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(*ptr_exp,<sp/>UNITY_DISPLAY_STYLE_HEX8);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(*ptr_act,<sp/>UNITY_DISPLAY_STYLE_HEX8);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_exp++;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_act++;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>UNITY_ARRAY_TO_VAL)</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_exp<sp/>=<sp/>(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1570" refid="d5/ddd/unity_8c_1ad20eed15082bd5f03fa33cf3014e9a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT8<sp/><ref refid="d5/ddd/unity_8c_1ad20eed15082bd5f03fa33cf3014e9a99" kindref="member">i8</ref>;</highlight></codeline>
<codeline lineno="1571" refid="d5/ddd/unity_8c_1a3ff3d9c5010aa22165fa26f8e301131e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT16<sp/><ref refid="d5/ddd/unity_8c_1a3ff3d9c5010aa22165fa26f8e301131e" kindref="member">i16</ref>;</highlight></codeline>
<codeline lineno="1572" refid="d5/ddd/unity_8c_1ae9d133be8ac33cfb99b5b9646d7a5a87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT32<sp/><ref refid="d5/ddd/unity_8c_1ae9d133be8ac33cfb99b5b9646d7a5a87" kindref="member">i32</ref>;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT64<sp/>i64;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577" refid="d5/ddd/unity_8c_1af900396d7b72ff2a7002e8befe8cf8f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1af900396d7b72ff2a7002e8befe8cf8f1" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582" refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" refkind="member"><highlight class="normal">}<sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="d5/ddd/unity_8c_1af2af69f480a8fd2e98b3cef667c3c61c" refkind="member"><highlight class="normal">UNITY_INTERNAL_PTR<sp/><ref refid="d5/ddd/unity_8c_1af2af69f480a8fd2e98b3cef667c3c61c" kindref="member">UnityNumToPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT8<sp/>size)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(size)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i8<sp/>=<sp/>(UNITY_INT8)num;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i8);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i16<sp/>=<sp/>(UNITY_INT16)num;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i16);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i64<sp/>=<sp/>(UNITY_INT64)num;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i64);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i32<sp/>=<sp/>(UNITY_INT32)num;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.i32);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610" refid="d5/ddd/unity_8c_1a4226621ea2a6ee64b626dece4f566614" refkind="member"><highlight class="normal">UNITY_INTERNAL_PTR<sp/><ref refid="d5/ddd/unity_8c_1a4226621ea2a6ee64b626dece4f566614" kindref="member">UnityFloatToPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.f<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.f);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal">UNITY_INTERNAL_PTR<sp/>UnityDoubleToPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.d<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(UNITY_INTERNAL_PTR)(&amp;<ref refid="d5/ddd/unity_8c_1a57da659d7172cb560f11fd769bb9ca66" kindref="member">UnityQuickCompare</ref>.d);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/>*<sp/>printf<sp/>helper<sp/>function</highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_PRINT_FORMATTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintFVA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>va_list<sp/>va)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>identification<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*pch)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)number);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>((UNITY_DOUBLE)number);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>((UNITY_UINT)number);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>mask<sp/>=<sp/>(UNITY_UINT)0<sp/>-<sp/>(UNITY_UINT)1;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>(mask,<sp/>(UNITY_UINT)number);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((UNITY_UINT)number,<sp/>8);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;ch);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>(pch);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>the<sp/>unknown<sp/>format<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>(pch);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>ANSI<sp/>escape<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>==<sp/>27)<sp/>&amp;&amp;<sp/>(*(pch<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>+=<sp/>UnityPrintAnsiEscapeString(pch);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aa3373f770c748cc1600d55cd8c7839c3" kindref="member">UnityPrintChar</ref>(pch);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>line);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(va,<sp/>format);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrintFVA(format,<sp/>va);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>UNITY_INCLUDE_PRINT_FORMATTED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/>*<sp/>Control<sp/>Functions</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758" refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a50275e939943157e22d5847646191696" kindref="member">UnityFail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>line);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_PRINT_TEST_CONTEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_TEST_CONTEXT();</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail1)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail1);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail2)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentDetail2);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795" refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a337924d7f537d54aa719e439d339b1fd" kindref="member">UnityIgnore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>line);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a8e7615065c9272a62eede0f1e725a774" kindref="member">UNITY_IGNORE_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811" refid="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a6fd5dc2726bbf3e7480c438b430c4041" kindref="member">UnityMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>line);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>not<sp/>defined<sp/>our<sp/>own<sp/>test<sp/>runner,<sp/>then<sp/>include<sp/>our<sp/>default<sp/>test<sp/>runner<sp/>to<sp/>make<sp/>life<sp/>easier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SKIP_DEFAULT_RUNNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827" refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" kindref="member">UnityDefaultTestRun</ref>(UnityTestFunction<sp/>Func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FuncName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FuncLineNum)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName<sp/>=<sp/>FuncName;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestLineNumber<sp/>=<sp/>(UNITY_LINE_TYPE)FuncLineNum;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.NumberOfTests++;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_CLR_DETAILS();</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_EXEC_TIME_START();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TEST_PROTECT())</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a95c834d6178047ce9e1bce7cbfea2836" kindref="member">setUp</ref>();</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Func();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TEST_PROTECT())</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d79/test__libft_8c_1a9909011e5fea0c018842eec4d93d0662" kindref="member">tearDown</ref>();</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_EXEC_TIME_STOP();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a44f03f0124e59f6996da61946cc2a58e" kindref="member">UnityConcludeTest</ref>();</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849" refid="d5/ddd/unity_8c_1afefd1b90b9854b428fef009e12489282" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1afefd1b90b9854b428fef009e12489282" kindref="member">UnitySetTestFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile<sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855" refid="d5/ddd/unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" kindref="member">UnityBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile<sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestLineNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.NumberOfTests<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFailures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestIgnores<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestFailed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestIgnored<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_CLR_DETAILS();</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_START();</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871" refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/ddd/unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" kindref="member">UnityEnd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" kindref="member">UnityStrBreaker</ref>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.NumberOfTests));</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" kindref="member">UnityStrResultsTests</ref>);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFailures));</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" kindref="member">UnityStrResultsFailures</ref>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((UNITY_INT)(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestIgnores));</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ab866d9dfd564414877c69e753e7e382e" kindref="member">UnityStrResultsIgnored</ref>);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFailures<sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="d5/ddd/unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_DIFFERENTIATE_FINAL_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">);<sp/>UNITY_OUTPUT_CHAR(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLUSH_CALL();</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_OUTPUT_COMPLETE();</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFailures);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/>*<sp/>Command<sp/>Line<sp/>Argument<sp/>Support</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_USE_COMMAND_LINE_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>UnityOptionIncludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>UnityOptionExcludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityVerbosity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityParseOptions(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(argv[i][1])</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>list<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>include<sp/>tests<sp/>with<sp/>name<sp/>including<sp/>this<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>an<sp/>alias<sp/>for<sp/>-n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>&amp;argv[i][3];</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>No<sp/>Test<sp/>String<sp/>to<sp/>Include<sp/>Matches<sp/>For&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>quiet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityVerbosity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>verbose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityVerbosity<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>exclude<sp/>tests<sp/>with<sp/>name<sp/>including<sp/>this<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>&amp;argv[i][3];</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>No<sp/>Test<sp/>String<sp/>to<sp/>Exclude<sp/>Matches<sp/>For&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/ddd/unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Unknown<sp/>Option<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(argv[i][1]);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PRINT_EOL();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsStringInBiggerString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>longstring,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortstring)</highlight></codeline>
<codeline lineno="1977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lptr<sp/>=<sp/>longstring;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sptr<sp/>=<sp/>shortstring;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lnext<sp/>=<sp/>lptr;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*lptr)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnext<sp/>=<sp/>lptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>they<sp/>current<sp/>bytes<sp/>match,<sp/>go<sp/>on<sp/>to<sp/>the<sp/>next<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*lptr<sp/>&amp;&amp;<sp/>*sptr<sp/>&amp;&amp;<sp/>(*lptr<sp/>==<sp/>*sptr))</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr++;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sptr++;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>done<sp/>if<sp/>we<sp/>match<sp/>the<sp/>entire<sp/>string<sp/>or<sp/>up<sp/>to<sp/>a<sp/>wildcard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>we<sp/>start<sp/>in<sp/>the<sp/>long<sp/>pointer<sp/>1<sp/>character<sp/>further<sp/>and<sp/>try<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr<sp/>=<sp/>lnext;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>=<sp/>shortstring;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityStringArgumentMatches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="2022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr1;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr2;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptrf;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>through<sp/>the<sp/>options<sp/>and<sp/>get<sp/>the<sp/>substrings<sp/>for<sp/>matching<sp/>one<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr1[0]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr1[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr1[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1++;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2<sp/>=<sp/>ptr1;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2++;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[1]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrf<sp/>=<sp/>&amp;ptr2[1];</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2++;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>complete<sp/>filename<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>IsStringInBiggerString(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.TestFile,<sp/>ptr1);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>testname<sp/>match<sp/>after<sp/>filename<sp/>partial<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(ptrf<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsStringInBiggerString(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName,<sp/>ptrf))</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>complete<sp/>testname<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsStringInBiggerString(<ref refid="d5/ddd/unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.CurrentTestName,<sp/>ptr1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>ptr2;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>couldn&apos;t<sp/>find<sp/>a<sp/>match<sp/>for<sp/>any<sp/>substrings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityTestMatches(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>this<sp/>test<sp/>name<sp/>matches<sp/>the<sp/>included<sp/>test<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityOptionIncludeNamed)</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>UnityStringArgumentMatches(UnityOptionIncludeNamed);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>this<sp/>test<sp/>name<sp/>matches<sp/>the<sp/>excluded<sp/>test<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityOptionExcludeNamed)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityStringArgumentMatches(UnityOptionExcludeNamed))</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UNITY_USE_COMMAND_LINE_ARGS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="unity/unity.c"/>
  </compounddef>
</doxygen>
